---
http_interactions:
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:10 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640590; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:17
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:17 GMT; Path=/; Secure
      - uu=BCYtDlEDOdQc1d9kAIHzOW2mdrOK4u8SUWjf66B829Br20Z8jUyYpQtKWhLBj2nSPaRBe9eNTase%0D%0Aeiyav0pV_ZX2MYyTFnsDaoo509J9-Wf557Bv9xO7uNGn-hup0eJmKPaBKM3igDxKQmaLZTdAicUI%0D%0Age1WLNVbK9-_XgKPF_dOFkqP0WnmmBd-7pgG0g5dvYIsMW614_i7NRTIO8JEnGcdkNjH-kK17ebA%0D%0AXsY6iTf5vdpJ2i9Hty73wEiOoSkym8fZTJnPmIo4xmhgwZsZ_NOeB-SNO2UQeGdHcR8X9vVUa5c%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:17 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:10 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:11 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640591; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:18
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:18 GMT; Path=/; Secure
      - uu=BCYnxCOsvZbHIUctCctVGQh6L6BOZqjpwPBZsSWtn6fO0Yllov0YbIiZiugOEAorh-rI7e61OFTk%0D%0A3ub55kZ5vB0Zuy-vfXE_LrouGaWHmI_97_BHvlh0ThicxFQP6FCGDjWwkgdMu2eJM__UxuW-iLG5%0D%0AN-FSzRNLIW_OV5ea5M3VKI9iJvHPMsz_r1lBuPAbFdllkE-IMN5IEWX7danlKmJCaZ80x2uglsfJ%0D%0AsdsASwNrs1CpIivOYHILgNONgaXDL7jwg6j-cdCbEHJB8znhFl9Z7lm7ckmjmMWqIkuo9_I2qhM%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:18 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:11 GMT
- request:
    method: get
    uri: https://www.imdb.com/title/tt5164196/?ref_=fn_al_tt_1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:12 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640591; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:19
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:19 GMT; Path=/; Secure
      - uu=BCYn078kGIl9pfBWj_xwhKXLnfXTWvAjL6G8CyIyZmFVFEZaU5O8qqiCMHbO6rLcZDEhXzp1KwIS%0D%0AVvHsBeiCNR-oMoM5pkfmNy4SVSo5s37yXquDxSIwbTpaRmgylWevZmFDVtL3WSVNFBJwEWCBf9dQ%0D%0AuZ3VGuxkTnbXNYtsFhxPoXmdBBgudywy17TdcFXRXMus_YzrSwxLCMz8Cu-Cbmwh-3nHdIXYyQ0o%0D%0APgX691r3QhCxb1E59NKmC9Jict8V_wTsUUCdQPltyoelwMI7cr4ulA%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:19 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:12 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:13 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640593; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:20
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:20 GMT; Path=/; Secure
      - uu=BCYpSL4PCUmevwR8z-pII5TrtR2_iqhaLizKA3NmeSxfzVkDmUMWdq3y9vze9KixcKypmxUC6YVi%0D%0AFdgkecnaJSS1ViGaokjdQfwf_86xUm0_E_LNZwU3-riiU_uatiwv-X-IEf6VoKjLeeNnmSDaK-pB%0D%0A-C9qBeBwa16xjOuB22aCTI877fMbMp7K-X-nvdzdFV_eGbRr1bxkV10H2Qih32GVD_xQg90fYKKB%0D%0A4mHu4xrIX4fyFdFlYXsqA5Z3Y_9_3qE3J6AavaF017gWuqYilb-AzaU2FccJzwwTfdyb4G1LPO8%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:20 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:13 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:13 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640593; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:20
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:20 GMT; Path=/; Secure
      - uu=BCYi1ak5YTVGDw-ISeMaQ7a1Aiq2tU52KV_A6jqGty2fTdPqscTT3BGx89TNTxeYL4i38iazDOrg%0D%0A3Rf-C7m3X9-kafZ0Cn_sXbxXIuPqlYBxliJsKFgQ1Mcrr47Qtj0CendqSAZ6UJAvbgpwQ3WvGEPD%0D%0ALUVRPpVX0RpEkC4y3cTtojMDPRLPIIO_foClCD6u6UmU2_GbKcdi5-TqwiInYYv0vZ2dfiLq55d2%0D%0AZU1riRA21bTe5Oouof2mbq2oB2sUkZ174xRo7XXeX65XdEs2-CM3g5wmVhz40TVVU9Jb22nmNSk%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:20 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:14 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:14 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640594; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:21
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:21 GMT; Path=/; Secure
      - uu=BCYve46nXxYF1lM_LY2EIfGNZz3XeEri9SM1BWcTzoZpH57_MjmpOenANMD9irFuAjTsyJd5TO6p%0D%0Atm-3dyBpJhMhopdQRVySkY16t5kqiV6taDQWXCPhyvSfMNH5jRIHroQOQnZpCCq1Cb6bqpAWwQl3%0D%0AGrXsM9YwEBVDbgatUDN7BBOe1E4vHHPLkE_xQBYDNjflkYnG0WstGHlt27XyOjL2r_YKHBqxh84s%0D%0ARggqGh09IfX8JDqoeMSGBz11TGdzOUTraK1lqppLBiQofNGcKeB0bpE4cV3BfbSvqv21705gfr4%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:21 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:14 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:15 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640595; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:22
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:22 GMT; Path=/; Secure
      - uu=BCYk9tsGvlZKj8U28D1pGxG6Qs2ee9fYF5dKJ5Eyw_Isvc-ltHLZVPh7gRl7hFt5yDlBotuUdWd1%0D%0AaYeH1w8Bj-NRg6gj3wDQj40khviV801uyMFCca1S52LFP56B8GtLxalddert-pnI1Vbz8VFC9C3m%0D%0ANty9jjlKJyJM44dxNYw5XVXJwsY48WIG6UE-YqOGf9TMgpfeB6ubLM5yK7YlNGIC3yJJPOYILvVa%0D%0AZr_oghnHJWTDYgjMXiNURCKEWK--rnBIZ21JNYQAT0VD28F9LL9i3xUyPOm4kTPGQd2VA44Hysw%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:22 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        CgoKCjwhRE9DVFlQRSBodG1sPgo8aHRtbAogICAgeG1sbnM6b2c9Imh0dHA6Ly9vZ3AubWUvbnMjIgogICAgeG1sbnM6ZmI9Imh0dHA6Ly93d3cuZmFjZWJvb2suY29tLzIwMDgvZmJtbCI+CiAgICA8aGVhZD4KICAgICAgICAgCiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CgogICAgPG1ldGEgbmFtZT0iYXBwbGUtaXR1bmVzLWFwcCIgY29udGVudD0iYXBwLWlkPTM0Mjc5MjUyNSwgYXBwLWFyZ3VtZW50PWltZGI6Ly8vP3NyYz1tZG90Ij4KCgoKICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+dmFyIElNRGJUaW1lcj17c3RhcnR0aW1lOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSxwdDonamF2YSd9Ozwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJMb2FkVGl0bGUiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcHJlX3RpdGxlIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KICAgICAgICA8dGl0bGU+RmluZCAtIElNRGI8L3RpdGxlPgogIDxzY3JpcHQ+KGZ1bmN0aW9uKHQpeyAodC5ldmVudHMgPSB0LmV2ZW50cyB8fCB7fSlbImNzbV9oZWFkX3Bvc3RfdGl0bGUiXSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9KShJTURiVGltZXIpOzwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIkxvYWRUaXRsZSIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJMb2FkVGl0bGUiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CgogICAgICAgIDxsaW5rIHJlbD0iY2Fub25pY2FsIiBocmVmPSJodHRwczovL3d3dy5pbWRiLmNvbS9maW5kIiAvPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cuaW1kYi5jb20vZmluZCIgLz4KCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmIiLCAiTG9hZEljb25zIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+KGZ1bmN0aW9uKHQpeyAodC5ldmVudHMgPSB0LmV2ZW50cyB8fCB7fSlbImNzbV9oZWFkX3ByZV9pY29uIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KICAgICAgICA8bGluayBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9zYWZhcmktZmF2aWNvbi01MTc2MTEzODEuX0NCNDk5NjEzNjkyXy5zdmciIG1hc2sgcmVsPSJpY29uIiBzaXplcz0iYW55Ij4KICAgICAgICA8bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL2ljbyIgaHJlZj0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvZmF2aWNvbi0yMTY1ODA2OTcwLl9DQjQ5OTYxMzU1Nl8uaWNvIiAvPgogICAgICAgIDxtZXRhIG5hbWU9InRoZW1lLWNvbG9yIiBjb250ZW50PSIjMDAwMDAwIiAvPgogICAgICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9kZXNrdG9wLWZhdmljb24tMjE2NTgwNjk3MC5fQ0I0OTk2MDM4MzhfLmljbyIgLz4KICAgICAgICA8bGluayBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9tb2JpbGUvYXBwbGUtdG91Y2gtaWNvbi13ZWItNDE1MTY1OTE4OC5fQ0I0OTk2MTM2MDlfLnBuZyIgcmVsPSJhcHBsZS10b3VjaC1pY29uIj4gCiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbW9iaWxlL2FwcGxlLXRvdWNoLWljb24td2ViLTc2eDc2LTUzNTM2MjQ4Ll9DQjQ5OTYwMzgzMV8ucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSI3Nng3NiI+IAogICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL21vYmlsZS9hcHBsZS10b3VjaC1pY29uLXdlYi0xMjB4MTIwLTI0NDI4Nzg0NzEuX0NCNDk5NjEzNjQ1Xy5wbmciIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9IjEyMHgxMjAiPiAKICAgICAgICA8bGluayBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9tb2JpbGUvYXBwbGUtdG91Y2gtaWNvbi13ZWItMTUyeDE1Mi0xNDc1ODIzNjQxLl9DQjQ5OTYwMzgzNV8ucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSIxNTJ4MTUyIj4gICAgICAgICAgICAKICAgICAgICA8bGluayByZWw9InNlYXJjaCIgdHlwZT0iYXBwbGljYXRpb24vb3BlbnNlYXJjaGRlc2NyaXB0aW9uK3htbCIgaHJlZj0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvaW1kYnNlYXJjaC0zMzQ5NDY4ODgwLl9DQjQ5OTU1ODg3OV8ueG1sIiB0aXRsZT0iSU1EYiIgLz4KICA8c2NyaXB0PihmdW5jdGlvbih0KXsgKHQuZXZlbnRzID0gdC5ldmVudHMgfHwge30pWyJjc21faGVhZF9wb3N0X2ljb24iXSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9KShJTURiVGltZXIpOzwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIkxvYWRJY29ucyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJMb2FkSWNvbnMiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgCgoKICAgICAgICA8bGluayByZWw9J2ltYWdlX3NyYycgaHJlZj0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbG9nb3MvaW1kYl9mYl9sb2dvLTE3MzA4NjgzMjUuX0NCNDk5NjA2OTgyXy5wbmciPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSdvZzppbWFnZScgY29udGVudD0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbG9nb3MvaW1kYl9mYl9sb2dvLTE3MzA4NjgzMjUuX0NCNDk5NjA2OTgyXy5wbmciIC8+CgogICAgPG1ldGEgcHJvcGVydHk9J2ZiOmFwcF9pZCcgY29udGVudD0nMTE1MTA5NTc1MTY5NzI3JyAvPgoKICAgIDxtZXRhIHByb3BlcnR5PSdvZzp0aXRsZScgY29udGVudD0iIiAvPgogICAgPG1ldGEgcHJvcGVydHk9J29nOnNpdGVfbmFtZScgY29udGVudD0nSU1EYicgLz4KICAgIDxtZXRhIG5hbWU9InRpdGxlIiBjb250ZW50PSJJTURiIiAvPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSIiIC8+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSIiIC8+CiAgICAgICAgPG1ldGEgbmFtZT0icmVxdWVzdF9pZCIgY29udGVudD0iQU40S1oxOTdHVFg0MzZRWEg0MTMiIC8+Cgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIkxvYWRDU1MiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcHJlX2NzcyJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvY3NzL2NvbGxlY3Rpb25zL2NvbnN1bWVyc2l0ZS0xNTczMjE3Njc3Ll9DQjQ3NjkyNzgwNl8uY3NzIiAvPgo8IS0tIGg9aWNzLWM0MnhsLTItMWEtMjRkYTg3YzAudXMtZWFzdC0xIC0tPgo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy9zaXRlL2NvbnN1bWVyLW5hdmJhci1tZWdhLTM3OTYxMTQyMDQuX0NCNDczOTk0NTMxXy5jc3MiIC8+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvY3NzL2FwcC9jb25zdW1lcnNpdGUvZmluZC0xNDM3OTQ0NDU2Ll9DQjQ5OTU1ODg2MF8uY3NzIiAvPgo8IS0tW2lmIElFXT48bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy9jb2xsZWN0aW9ucy9pZS0zNTc5MTUzNDQ3Ll9DQjQ5ODcyNDAzNV8uY3NzIiAvPjwhW2VuZGlmXS0tPgoKICAgICAgICA8bm9zY3JpcHQ+CiAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvY3NzL3doZWVsL25vanMtMjgyNzE1NjM0OS5fQ0I0OTk2MTM1MDJfLmNzcyI+CiAgICAgICAgPC9ub3NjcmlwdD4KICA8c2NyaXB0PihmdW5jdGlvbih0KXsgKHQuZXZlbnRzID0gdC5ldmVudHMgfHwge30pWyJjc21faGVhZF9wb3N0X2NzcyJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiTG9hZENTUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJMb2FkQ1NTIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJMb2FkSlMiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcHJlX2FkcyJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CiAgICAgICAgCiAgICAgICAgPHNjcmlwdCAgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgLy8gZW5zdXJlcyBqcyBkb2Vzbid0IGRpZSBpZiBhZHMgc2VydmljZSBmYWlscy4gIAogICAgICAgICAgICAvLyBOb3RlIHRoYXQgd2UgbmVlZCB0byBkZWZpbmUgdGhlIGpzIGhlcmUsIHNpbmNlIGFkIGpzIGlzIGJlaW5nIHJlbmRlcmVkIGlubGluZSBhZnRlciB0aGlzLgogICAgICAgICAgICAoZnVuY3Rpb24oZikgewogICAgICAgICAgICAgICAgLy8gRmFsbGJhY2sgamF2YXNjcmlwdCwgd2hlbiB0aGUgYWQgU2VydmljZSBjYWxsIGZhaWxzLiAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmKCh3aW5kb3cuY3NtID09IG51bGwgfHwgd2luZG93LmdlbmVyaWMgPT0gbnVsbCB8fCB3aW5kb3cuY29uc29sZUxvZyA9PSBudWxsKSkgewogICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuY29uc29sZSAmJiBjb25zb2xlLmxvZykgewogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygib25lIG9yIG1vcmUgb2Ygd2luZG93LmNzbSwgd2luZG93LmdlbmVyaWMgb3Igd2luZG93LmNvbnNvbGVMb2cgaGFzIGJlZW4gc3R1YmJlZC4uLiIpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgd2luZG93LmNzbSA9IHdpbmRvdy5jc20gfHwgeyBtZWFzdXJlOmYsIHJlY29yZDpmLCBkdXJhdGlvbjpmLCBsaXN0ZW46ZiwgbWV0cmljczp7fSB9OwogICAgICAgICAgICAgICAgd2luZG93LmdlbmVyaWMgPSB3aW5kb3cuZ2VuZXJpYyB8fCB7IG1vbml0b3Jpbmc6IHsgc3RhcnRfdGltaW5nOiBmLCBzdG9wX3RpbWluZzogZiB9IH07CiAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZUxvZyA9IHdpbmRvdy5jb25zb2xlTG9nIHx8IGY7CiAgICAgICAgICAgIH0pKGZ1bmN0aW9uKCkge30pOwogICAgICAgIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21faGVhZF9kZWxpdmVyeV9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIkxvYWRKUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJMb2FkSlMiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgCiAgICA8L2hlYWQ+CiAgICA8Ym9keSBpZD0ic3R5bGVndWlkZS12MiIgY2xhc3M9ImZpeGVkIj4KICAgICAgICAKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIpOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX2JvZHlfZGVsaXZlcnlfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgICAgIDxkaXYgaWQ9IndyYXBwZXIiPgogICAgICAgICAgICA8ZGl2IGlkPSJyb290IiBjbGFzcz0icmVkZXNpZ24iPgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoIm5zIik7CiAgICB9Cjwvc2NyaXB0Pgo8ZGl2IGlkPSJuYjIwIiBjbGFzcz0ibmF2YmFyU3ByaXRlIj4KPGRpdiBpZD0ic3VwZXJ0YWIiPgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogdG9wX2FkIC0tPgoJCjwvZGl2PgogIDxkaXYgaWQ9Im5hdmJhciIgY2xhc3M9Im5hdmJhclNwcml0ZSI+Cjxub3NjcmlwdD4KICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy9zaXRlL2NvbnN1bWVyLW5hdmJhci1uby1qcy0zNjUyNzgyOTg5Ll9DQjQ5OTYwMzc3Nl8uY3NzIiAvPgo8L25vc2NyaXB0Pgo8c3BhbiBpZD0iaG9tZV9pbWdfaG9sZGVyIj4KPGEgaHJlZj0iLz9yZWZfPW52X2hvbWUiCnRpdGxlPSJIb21lIiBjbGFzcz0ibmF2YmFyU3ByaXRlIiBpZD0iaG9tZV9pbWciID48L2E+ICA8c3BhbiBjbGFzcz0iYWx0X2xvZ28iPgogICAgPGEgaHJlZj0iLz9yZWZfPW52X2hvbWUiCnRpdGxlPSJIb21lIiA+SU1EYjwvYT4KICA8L3NwYW4+Cjwvc3Bhbj4KPGZvcm0KIG1ldGhvZD0iZ2V0IgogYWN0aW9uPSIvZmluZCIKIGNsYXNzPSJuYXYtc2VhcmNoYmFyLWlubmVyIgogaWQ9Im5hdmJhci1mb3JtIgoKPgogIDxkaXYgaWQ9Im5iX3NlYXJjaCI+CiAgICA8bm9zY3JpcHQ+PGRpdiBpZD0ibW9yZV9pZl9ub19qYXZhc2NyaXB0Ij48YSBocmVmPSIvc2VhcmNoLyI+TW9yZTwvYT48L2Rpdj48L25vc2NyaXB0PgogICAgPGJ1dHRvbiBpZD0ibmF2YmFyLXN1Ym1pdC1idXR0b24iIGNsYXNzPSJwcmltYXJ5IGJ0biIgdHlwZT0ic3VibWl0Ij48ZGl2IGNsYXNzPSJtYWduaWZ5aW5nZ2xhc3MgbmF2YmFyU3ByaXRlIj48L2Rpdj48L2J1dHRvbj4KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlZl8iIHZhbHVlPSJudl9zcl9mbiIgLz4KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBhdXRvY29tcGxldGU9Im9mZiIgdmFsdWU9IkxldGhhbCBXZWFwb24iIG5hbWU9InEiIGlkPSJuYXZiYXItcXVlcnkiIHBsYWNlaG9sZGVyPSJGaW5kIE1vdmllcywgVFYgc2hvd3MsIENlbGVicml0aWVzIGFuZCBtb3JlLi4uIj4KICAgIDxkaXYgY2xhc3M9InF1aWNrc2VhcmNoX2Ryb3Bkb3duX3dyYXBwZXIiPgogICAgICA8c2VsZWN0IG5hbWU9InMiIGlkPSJxdWlja3NlYXJjaCIgY2xhc3M9InF1aWNrc2VhcmNoX2Ryb3Bkb3duIG5hdmJhclNwcml0ZSBoaWRkZW4iPgogICAgICAgIDxvcHRpb24gdmFsdWU9ImFsbCIgPkFsbDwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9InR0IiA+VGl0bGVzPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iZXAiID5UViBFcGlzb2Rlczwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9Im5tIiA+TmFtZXM8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJjbyIgPkNvbXBhbmllczwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9Imt3IiA+S2V5d29yZHM8L29wdGlvbj4KICAgICAgPC9zZWxlY3Q+CiAgICA8L2Rpdj4KICAgIDxkaXYgaWQ9Im5hdmJhci1zdWdnZXN0aW9uc2VhcmNoIiBjbGFzcz0nY2Vsd2lkZ2V0JyBjZWxfd2lkZ2V0X2lkPSdTdWdnZXN0aW9uU2VhcmNoV2lkZ2V0Jz48L2Rpdj4KICA8L2Rpdj4KPC9mb3JtPgo8ZGl2IGlkPSJtZWdhTWVudSI+CiAgICA8dWwgaWQ9ImNvbnN1bWVyX21haW5fbmF2IiBjbGFzcz0ibWFpbl9uYXYiPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgICAgIDxsaSBjbGFzcz0iY3NzX25hdl9pdGVtIiBpZD0ibmF2VGl0bGVNZW51Ij4KICAgICAgICAgICAgPHAgY2xhc3M9Im5hdkNhdGVnb3J5Ij4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tb3ZpZXMtaW4tdGhlYXRlcnMvP3JlZl89bnZfdHBfaW50aF8xIgo+TW92aWVzPC9hPiwKICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFydC90b3B0di8/cmVmXz1udl90cF90djI1MF8yIgo+VFY8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICAmIDxhIGhyZWY9Ii9zaG93dGltZXMvP3JlZl89bnZfdHBfc2hfMyIKPlNob3d0aW1lczwvYT48L3A+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkb3duQXJyb3ciPjwvc3Bhbj4KICAgICAgICAgICAgPGRpdiBpZD0ibmF2TWVudTEiIGNsYXNzPSJzdWJfbmF2Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ0aXRsZU1lbnVJbWFnZSIgc3R5bGU9ImJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvTS9NVjVCT1RrMk1UazVPVEV6TlY1Qk1sNUJhbkJuWGtGdFpUY3dORGczTWpVNE13QEAuX1YxLl9TWTQwMF9DUjUwLDUwLDQxMCwzMTVfLmpwZycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGl0bGU9IiAgICAgICAgICAgICAgICAgICAgICAgICAgICBWZXJ0aWdvCiwgIzczIG9uIElNRGIgVG9wIFJhdGVkIE1vdmllcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii90aXRsZS90dDAwNTIzNTcvP3JlZl89bnZfbXZfZGZsdF8xIiBjbGFzcz0iZmFsbGJhY2siPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im92ZXJsYXkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDA1MjM1Ny8/cmVmXz1udl9tdl9kZmx0XzIiIGlkPSJ0aXRsZU1lbnVJbWFnZUNsaWNrIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVmVydGlnbwo8L3N0cm9uZz4gKDE5NTgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFydC90b3A/cmVmXz1udl9tdl9kZmx0XzMiIGlkPSJ0aXRsZU1lbnVJbWFnZVNlY29uZGFyeUNsaWNrIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIzxzdHJvbmc+NzM8L3N0cm9uZz4gb24gSU1EYiBUb3AgUmF0ZWQgTW92aWVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPiAmcmFxdW87CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViTmF2TGlzdENvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGg1Pk1PVklFUzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL21vdmllcy1pbi10aGVhdGVycy8/cmVmXz1udl9tdl9pbnRoXzEiCj5JbiBUaGVhdGVyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3Nob3d0aW1lcy8/cmVmXz1udl9tdl9zaF8yIgo+U2hvd3RpbWVzICYgVGlja2V0czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3RyYWlsZXJzLz9yZWZfPW52X212X3RyXzMiCj5MYXRlc3QgVHJhaWxlcnM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9tb3ZpZXMtY29taW5nLXNvb24vP3JlZl89bnZfbXZfY3NfNCIKPkNvbWluZyBTb29uPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FsZW5kYXIvP3JlZl89bnZfbXZfY2FsXzUiCj5SZWxlYXNlIENhbGVuZGFyPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdG9wP3JlZl89bnZfbXZfMjUwXzYiCj5Ub3AgUmF0ZWQgTW92aWVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvaW5kaWEvdG9wLXJhdGVkLWluZGlhbi1tb3ZpZXM/cmVmXz1udl9tdl8yNTBfaW5fNyIKPlRvcCBSYXRlZCBJbmRpYW4gTW92aWVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvbW92aWVtZXRlcj9yZWZfPW52X212X21wbV84Igo+TW9zdCBQb3B1bGFyIE1vdmllczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPGg1PkNIQVJUUyAmIFRSRU5EUzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NoYXJ0Lz9yZWZfPW52X2NoX2NodF8xIgo+Qm94IE9mZmljZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaC90aXRsZT9jb3VudD0xMDAmZ3JvdXBzPW9zY2FyX2Jlc3RfcGljdHVyZV93aW5uZXJzJnNvcnQ9eWVhcixkZXNjJnJlZl89bnZfY2hfb3NjXzIiCj5Pc2NhciBXaW5uZXJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZ2VucmUvP3JlZl89bnZfY2hfZ3JfMyIKPk1vc3QgUG9wdWxhciBieSBHZW5yZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1Yk5hdkxpc3RDb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNT5UViAmIFZJREVPPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvdHYvP3JlZl89bnZfdHZ2X3R2XzEiCj5JTURiIFRWPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdG9wdHYvP3JlZl89bnZfdHZ2XzI1MF8zIgo+VG9wIFJhdGVkIFRWIFNob3dzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdHZtZXRlcj9yZWZfPW52X3R2dl9tcHR2XzQiCj5Nb3N0IFBvcHVsYXIgVFYgU2hvd3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWN0aW9ucy9kdmQvP3JlZl89bnZfdHZ2X2R2ZF81Igo+RFZEICYgQmx1LVJheTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPGg1PlNQRUNJQUwgRkVBVFVSRVM8L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hbWF6b24tb3JpZ2luYWxzLz9yZWZfPW52X3NmX2Ftc18xIgo+QW1hem9uIE9yaWdpbmFsczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2ltZGJwaWNrcy9zdW1tZXItbW92aWUtZ3VpZGUvbHMwNjg0NDk1NTAvP3JlZl89bnZfc2Zfc3RfMiIKPlN1bW1lciBNb3ZpZSBHdWlkZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3N0YXItd2Fycy8/cmVmXz1udl9zZl9zdHdfMyIKPlN0YXIgV2FyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2ltZGJwaWNrcy8/cmVmXz1udl9zZl9waWNrc180Igo+SU1EYiBQaWNrczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3N1cGVyaGVyb2VzLz9yZWZfPW52X3NmX3N1cHJfNSIKPlN1cGVyaGVyb2VzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZmFtaWx5LWVudGVydGFpbm1lbnQtZ3VpZGUvP3JlZl89bnZfc2ZfZmFtXzYiCj5GYW1pbHk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii92aWRlby1nYW1lcy8/cmVmXz1udl9zZl92aWRnXzciCj5WaWRlbyBHYW1lczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfaXRlbSIgaWQ9Im5hdk5hbWVNZW51Ij4KICAgICAgICAgICAgPHAgY2xhc3M9Im5hdkNhdGVnb3J5Ij4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zZWFyY2gvbmFtZT9nZW5kZXI9bWFsZSxmZW1hbGUmcmVmXz1udl90cF9jZWxfMSIKPkNlbGViczwvYT4sCiAgICAgICAgICAgICAgICA8YSBocmVmPSIvYXdhcmRzLWNlbnRyYWwvP3JlZl89bnZfdHBfYXdyZF8yIgo+RXZlbnRzPC9hPjxiciAvPgogICAgICAgICAgICAgICAgJiA8YSBocmVmPSIvZ2FsbGVyeS9yZzc4NDk2NDM1Mj9yZWZfPW52X3RwX3BoXzMiCj5QaG90b3M8L2E+PC9wPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZG93bkFycm93Ij48L3NwYW4+CiAgICAgICAgICAgIDxkaXYgaWQ9Im5hdk1lbnUyIiBjbGFzcz0ic3ViX25hdiI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibmFtZU1lbnVJbWFnZSIgc3R5bGU9ImJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvTS9NVjVCTWpBMU56a3lOakF6TlY1Qk1sNUJhbkJuWGtGdFpUY3dOell5T1RVeE9RQEAuX1YxLl9TWDI1MF9DUjAsMCwyNTAsMzE1Xy5qcGcnKSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRpdGxlPSJBbm5lIEhhdGhhd2F5LCAjMTA2IG9uIFNUQVJtZXRlciIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9uYW1lL25tMDAwNDI2Ni8/cmVmXz1udl9jZWxfZGZsdF8xIiBjbGFzcz0iZmFsbGJhY2siPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im92ZXJsYXkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL25hbWUvbm0wMDA0MjY2Lz9yZWZfPW52X2NlbF9kZmx0XzIiIGlkPSJuYW1lQWRDbGljayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+QW5uZSBIYXRoYXdheTwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4gJnJhcXVvOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICM8c3Ryb25nPjEwNjwvc3Ryb25nPiBvbiBTVEFSbWV0ZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJOYXZMaXN0Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8aDU+Q0VMRUJTPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaC9uYW1lP2JpcnRoX21vbnRoZGF5PTA3LTA2JnJlZmluZT1iaXJ0aF9tb250aGRheSZyZWZfPW52X2NlbF9icm5fMSIKPkJvcm4gVG9kYXk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL2NlbGVicml0eT9yZWZfPW52X2NlbF9ud18yIgo+Q2VsZWJyaXR5IE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2gvbmFtZT9nZW5kZXI9bWFsZSxmZW1hbGUmcmVmXz1udl9jZWxfbV8zIgo+TW9zdCBQb3B1bGFyIENlbGViczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPGg1PlBIT1RPUzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dhbGxlcnkvcmcxODU5ODIwMjg4P3JlZl89bnZfcGhfbHNfMSIKPkxhdGVzdCBTdGlsbHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9nYWxsZXJ5L3JnMTYyNDkzOTI2ND9yZWZfPW52X3BoX2xwXzIiCj5MYXRlc3QgUG9zdGVyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dhbGxlcnkvcmcxNjQxNzE2NDgwP3JlZl89bnZfcGhfbHZfMyIKPlBob3RvcyBXZSBMb3ZlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViTmF2TGlzdENvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGg1PkVWRU5UUzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2F3YXJkcy1jZW50cmFsLz9yZWZfPW52X2V2X2F3cmRfMSIKPkF3YXJkcyBDZW50cmFsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZmVzdGl2YWwtY2VudHJhbC8/cmVmXz1udl9ldl9mY18yIgo+RmVzdGl2YWwgQ2VudHJhbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL29zY2Fycy8/cmVmXz1udl9ldl9hY2RfMyIKPk9zY2FyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dvbGRlbi1nbG9iZXMvP3JlZl89bnZfZXZfZ2dfNCIKPkdvbGRlbiBHbG9iZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zdW5kYW5jZS8/cmVmXz1udl9ldl9zdW5fNSIKPlN1bmRhbmNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FubmVzLz9yZWZfPW52X2V2X2Nhbl82Igo+Q2FubmVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY29taWMtY29uLz9yZWZfPW52X2V2X2NvbWljXzciCj5Db21pYy1Db248L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbW15cy8/cmVmXz1udl9ldl9ydGVfOCIKPkVtbXkgQXdhcmRzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvdmVuaWNlLz9yZWZfPW52X2V2X3ZlbmljZV85Igo+VmVuaWNlIEZpbG0gRmVzdGl2YWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii90b3JvbnRvLz9yZWZfPW52X2V2X3Rvcl8xMCIKPlRvcm9udG8gRmlsbSBGZXN0aXZhbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2Zlc3RpdmFsLWNlbnRyYWwvdHJpYmVjYT9yZWZfPW52X2V2X3RyYl8xMSIKPlRyaWJlY2E8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zeHN3Lz9yZWZfPW52X2V2X3N4c3dfMTIiCj5TWFNXPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZXZlbnQvYWxsLz9yZWZfPW52X2V2X2FsbF8xMyIKPkFsbCBFdmVudHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJjc3NfbmF2X2l0ZW0iIGlkPSJuYXZOZXdzTWVudSI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJuYXZDYXRlZ29yeSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbmV3cy90b3A/cmVmXz1udl90cF9ud18xIgo+TmV3czwvYT4gJjxiciAvPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2N6b25lLz9yZWZfPW52X2NtX2N6XzIiCj5Db21tdW5pdHk8L2E+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgogICAgICAgICAgICA8ZGl2IGlkPSJuYXZNZW51MyIgY2xhc3M9InN1Yl9uYXYiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0ibGF0ZXN0SGVhZGxpbmVzIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJOYXZMaXN0Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGg1PkxBVEVTVCBIRUFETElORVM8L2g1PgogICAgPHVsIGNsYXNzPSJpcGwtc2ltcGxlLWxpc3QiPgogICAgICAgICAgICA8bGkgY2xhc3M9Im5ld3NfaXRlbSI+CjxhIGhyZWY9Ii9uZXdzL25pNjIxMjIzMzQ/cmVmXz1udl9ud190bl8xIgo+IENvbWljLUNvbiAyMDE4OiBGcmlkYXkgU2NoZWR1bGUgSW5jbHVkZXMg4oCYRHIuIEhvcnJpYmxl4oCZIFJldW5pb24sIOKAmFZlbm9t4oCZLCDigJhHbGFzc+KAmSBhbmQgTW9yZQo8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICA8c21hbGw+CiAgICAgICAgICAgICAgICA8c3Bhbj41IGhvdXJzIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3Bhbj5Db2xsaWRlci5jb208L3NwYW4+CiAgICAgICAgICAgICAgICA8L3NtYWxsPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9Im5ld3NfaXRlbSI+CjxhIGhyZWY9Ii9uZXdzL25pNjIxMjI2Njg/cmVmXz1udl9ud190bl8yIgo+IE1hcmdvdCBSb2JiaWUgc2F5cyBSLXJhdGVkIEJpcmRzIG9mIFByZXkgbW92aWUgY291bGQgc2hvb3QgaW4gSmFudWFyeQo8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICA8c21hbGw+CiAgICAgICAgICAgICAgICA8c3Bhbj4yNyBtaW51dGVzIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3Bhbj5Kb0Jsbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvc21hbGw+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibmV3c19pdGVtIj4KPGEgaHJlZj0iL25ld3Mvbmk2MjEyMjI3Nj9yZWZfPW52X253X3RuXzMiCj4gS2VyaSBSdXNzZWxsIGlzIFNldCB0byBTdGFyIGluIFN0YXIgV2FyczogRXBpc29kZSBJWAo8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICA8c21hbGw+CiAgICAgICAgICAgICAgICA8c3Bhbj42IGhvdXJzIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3Bhbj5HZWVrVHlyYW50PC9zcGFuPgogICAgICAgICAgICAgICAgPC9zbWFsbD4KICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1Yk5hdkxpc3RDb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNT5ORVdTPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbmV3cy90b3A/cmVmXz1udl9ud190cF8xIgo+VG9wIE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL21vdmllP3JlZl89bnZfbndfbXZfMiIKPk1vdmllIE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL3R2P3JlZl89bnZfbndfdHZfMyIKPlRWIE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL2NlbGVicml0eT9yZWZfPW52X253X2NlbF80Igo+Q2VsZWJyaXR5IE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL2luZGllP3JlZl89bnZfbndfaW5kXzUiCj5JbmRpZSBOZXdzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICA8aDU+Q09NTVVOSVRZPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY3pvbmUvP3JlZl89bnZfY21fY3pfMiIKPkNvbnRyaWJ1dG9yIFpvbmU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wb2xsLz9yZWZfPW52X2NtX3BsXzMiCj5Qb2xsczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfaXRlbSIgaWQ9Im5hdldhdGNobGlzdE1lbnUiPgo8cCBjbGFzcz0ibmF2Q2F0ZWdvcnkgc2luZ2xlTGluZSB3YXRjaGxpc3QiPgogICAgPGEgaHJlZj0iL2xpc3Qvd2F0Y2hsaXN0P3JlZl89bnZfd2xfYWxsXzAiCj5XYXRjaGxpc3Q8L2E+CjwvcD4KPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgo8ZGl2IGlkPSJuYXZNZW51NCIgY2xhc3M9InN1Yl9uYXYiPgogICAgPGg1PgogICAgICAgICAgICBZT1VSIFdBVENITElTVAogICAgPC9oNT4KICAgIDx1bCBpZD0ibmF2V2F0Y2hsaXN0Ij4KICAgIDwvdWw+CiAgICA8c2NyaXB0PgogICAgaWYgKCEoJ2ltZGInIGluIHdpbmRvdykpIHsgd2luZG93LmltZGIgPSB7fTsgfQogICAgd2luZG93LmltZGIud2F0Y2hsaXN0VGVhc2VyRGF0YSA9IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgaHJlZiA6ICIvbGlzdC93YXRjaGxpc3QiLAogICAgICAgICAgICAgICAgc3JjIDogImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci93YXRjaGxpc3Rfc2xvdDFfbG9nZ2VkX291dC0xNjcwMDQ2MzM3Ll9DQjQ5OTU1ODYzNF8uanBnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBocmVmIDogIi9zZWFyY2gvdGl0bGU/Y291bnQ9MTAwJnRpdGxlX3R5cGU9ZmVhdHVyZSx0dl9zZXJpZXMiLAogICAgICAgICAgICAgICAgc3JjIDogImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci93YXRjaGxpc3Rfc2xvdDJfcG9wdWxhci00MDkwNzU3MTk3Ll9DQjQ5OTYwMzc5OF8uanBnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBocmVmIDogIi9jaGFydC90b3AiLAogICAgICAgICAgICAgICAgc3JjIDogImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci93YXRjaGxpc3Rfc2xvdDNfdG9wMjUwLTU3NTc5OTk2Ni5fQ0I0OTk2MDY5NjVfLmpwZyIKICAgICAgICAgICAgICAgIH0KICAgIF07CiAgICA8L3NjcmlwdD4KPC9kaXY+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgIDwvdWw+CjwvZGl2Pgo8ZGl2IGlkPSJuYl9leHRyYSI+CiAgICA8dWwgaWQ9Im5iX2V4dHJhX25hdiIgY2xhc3M9Im1haW5fbmF2Ij4KICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfaXRlbSIgaWQ9Im5hdlByb01lbnUiPgogICAgPHAgY2xhc3M9Im5hdkNhdGVnb3J5Ij4KPGEgaHJlZj0iaHR0cHM6Ly9wcm8uaW1kYi5jb20vc2lnbnVwL2luZGV4Lmh0bWw/cmY9Y29uc19uYl9obSZyZWZfPWNvbnNfbmJfaG0iCj4gPGltZyBhbHQ9IklNRGJQcm8gTWVudSIgc3JjPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9uYXZiYXIvaW1kYnByb19sb2dvX25iLTMwMDA0NzM4MjYuX0NCNDk5NjAzODEzXy5wbmciIC8+CjwvYT4gICAgPC9wPgogICAgPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgo8ZGl2IGlkPSJuYXZNZW51UHJvIiBjbGFzcz0iaW1kYi1wcm8tYWQtc2hhcmVkIGltZGItcHJvLWFkLXJlZGVzaWduIHN1Yl9uYXYiPgo8YSBocmVmPSJodHRwczovL3Byby5pbWRiLmNvbS9zaWdudXAvaW5kZXguaHRtbD9yZj1jb25zX25iX2htJnJlZl89Y29uc19uYl9obSIKY2xhc3M9ImltZGItcHJvLWFkX19saW5rIiA+IDxkaXYgaWQ9InByb0FkIiBjbGFzcz0iaW1kYi1wcm8tYWRfX2ltYWdlIj4KPGltZyBhbHQ9IkdvIHRvIElNRGJQcm8iIGhlaWdodD0iMTQ1IiB3aWR0aD0iMTI3IgpzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci9pbWRicHJvX25hdmJhcl9tZW51X3VzZXItMjA3NDg2OTQxNi5fQ0I0NzQwMTc3MDZfLnBuZyIKc3Jjc2V0PSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9uYXZiYXIvaW1kYnByb19uYXZiYXJfbWVudV91c2VyLTIwNzQ4Njk0MTYuX0NCNDc0MDE3NzA2Xy5wbmcgMXgsCmh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci9pbWRicHJvX25hdmJhcl9tZW51X3VzZXJfMngtMjQ0MjU5NDU3Ll9DQjQ3NDAxNzcwMF8ucG5nIDJ4Ii8+CjwvZGl2Pgo8c2VjdGlvbiBjbGFzcz0iaW1kYi1wcm8tYWRfX2NvbnRlbnQiPgo8ZGl2IGNsYXNzPSJpbWRiLXByby1hZF9fdGl0bGUiPlRoZSBlc3NlbnRpYWwgcmVzb3VyY2UgZm9yIGVudGVydGFpbm1lbnQgcHJvZmVzc2lvbmFsczwvZGl2Pgo8cCBjbGFzcz0iaW1kYi1wcm8tYWRfX2xpbmUiPkZpbmQgaW5kdXN0cnkgY29udGFjdHMgJmFtcDsgdGFsZW50IHJlcHJlc2VudGF0aW9uPC9wPgo8cCBjbGFzcz0iaW1kYi1wcm8tYWRfX2xpbmUiPkFjY2VzcyBpbi1kZXZlbG9wbWVudCB0aXRsZXMgbm90IGF2YWlsYWJsZSBvbiBJTURiPC9wPgo8cCBjbGFzcz0iaW1kYi1wcm8tYWRfX2xpbmUiPkdldCB0aGUgbGF0ZXN0IG5ld3MgZnJvbSBsZWFkaW5nIGluZHVzdHJ5IHRyYWRlczwvcD4KPHAgY2xhc3M9ImltZGItcHJvLWFkX19saW5lIj5DbGFpbSB5b3VyIHBhZ2UgYW5kIGNvbnRyb2wgeW91ciBicmFuZCBhY3Jvc3MgSU1EYiAmIEFtYXpvbjwvcD4KPGRpdiBjbGFzcz0iaW1kYi1wcm8tbmV3X19idXR0b24iPgo8c3ZnIHdpZHRoPSIxNzVweCIgaGVpZ2h0PSIzMHB4IiB2aWV3Qm94PSIwIDAgMTcyIDI5IiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPgo8dGl0bGU+VHJ5SU1EYlByb0ZyZWU8L3RpdGxlPgo8ZyBpZD0idHJ5SU1EYlByb0ZyZWUiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgo8cmVjdCBpZD0idHJ5SU1EYlByb0ZyZWVCdXR0b24iIHN0cm9rZT0iI0E4ODczNCIgZmlsbD0iI0YxQzI0MSIgeD0iMSIgeT0iMSIgd2lkdGg9IjE3MCIgaGVpZ2h0PSIyOCIgcng9IjMiPjwvcmVjdD4KPHRleHQgaWQ9InRyeUlNRGJQcm9GcmVlVGV4dCI+Cjx0c3BhbiB4PSIzMyIgeT0iMTkiPlRyeSBJTURiUHJvIEZyZWU8L3RzcGFuPgo8L3RleHQ+CjwvZz4KPC9zdmc+CjwvZGl2Pgo8L3NlY3Rpb24+CjwvYT48L2Rpdj4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+PC9saT4KICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaGVscC5pbWRiLmNvbS9pbWRiP3JlZl89Y29uc19uYl9obHAiCj5IZWxwPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJzb2NpYWwiPgoKICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfZmImdG9rZW49QkNZaTVUb3BiZDlkQWxMOWhKamxiZV9JdUpyLVpDRVJlV0NrSmc5N2VYVUhsSnVVZXZCZ1ZPaE9rR0ZLbFI5RVNRalcwc1hvcXZ0WSUwRCUwQUJFS0pGTC0zRmlRQlAwb3dFaXU1WFNzTi1NTzBKUGo5ZkZDdC1rZS1WTlBNUFhrODlsLVZvZ01IVEhibXJfc0szNXIxU1E0bThYMFAlMEQlMEEzV0VNbnFzcG5CZkpPTUZIbzR3U2dhT2JrZ21BSlZyQktDc0tNYTZRR3QxZSUwRCUwQSZyZWZfPW52X2ZvbF9mYiIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIEZhY2Vib29rIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LWZhY2Vib29rIiA+PC9zcGFuPgo8L2E+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249Zm9sX3R3JnRva2VuPUJDWWtSWkVvSTNOSE15X0dtbFF0bDNIdTFteWUwV3ltbVVwcmNEazhKR3Y4cDZsd3c4dWVPNHRIR1pWR3JkbjlOQTNWeXdwWloxTHclMEQlMEF6MTVlTV9Uc3dQSXgzdWMyZkxaU3dZWGJGLUo5aURaOHFtY3F5TmNQRmQwVmc0VEQzWG9oWURmMFBqajl0T1JxdlZzZS1sZzJFRnR5JTBEJTBBTmtISzR2dFZiRkdrQVNkTGlnMkxGb3ZrQ08wbUFMa3pIRnRkYWZQWXR3MHklMEQlMEEmcmVmXz1udl9mb2xfdHciCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBUd2l0dGVyIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LXR3aXR0ZXIiID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfaW5zdCZ0b2tlbj1CQ1lydHZjUmhBcmVycGhDMWJRVGlVY05Nb3gzSEZZbzFNaUlHdGF6dC03T1I2U1R3QnBMaUtKbUwwTUJ3T1A3MEdTVTJvelpRdEpMJTBEJTBBdlp5WjZZZm1CUHVScFNPRHVHVkNQUmxidE5YbTl0bjhEQTF2aGswVW93MkR4NFdZc1RmMXNZWldSbjFoUjRvT01oQnFGV2xpWnJMZCUwRCUwQXV6XzlOeS12WjJ5RjZoOXdaY2d4MXRqU1E1cVlfN2hSQ1UxV1JxWlJQclFLJTBEJTBBJnJlZl89bnZfZm9sX2luc3QiCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBJbnN0YWdyYW0iIHRhcmdldD0iX2JsYW5rIiA+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBmb2xsb3ctaW5zdGFncmFtIiA+PC9zcGFuPgo8L2E+CiAgICAgICAgPC9saT4KICAgIDwvdWw+CjwvZGl2Pgo8ZGl2IGlkPSJuYl9wZXJzb25hbCI+CiAgICA8dWwgaWQ9ImNvbnN1bWVyX3VzZXJfbmF2IiBjbGFzcz0ibWFpbl9uYXYiPgogICAgICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfbWVudSBub19hcnJvdyIgaWQ9Im5hdlVzZXJNZW51Ij4KICAgICAgICAgICAgPHAgY2xhc3M9Im5hdkNhdGVnb3J5IHNpbmdsZUxpbmUiPgogICAgICAgICAgICAgICAgPGEgaWQ9ImZhY2Vib29rLXNpZ25pbi1saW5rIiBocmVmPSJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92Mi44L29hdXRoL2F1dGhvcml6ZT9jbGllbnRfaWQ9MTI3MDU5OTYwNjczODI5JnNjb3BlPWVtYWlsJTJDdXNlcl9hYm91dF9tZSUyQ3VzZXJfYmlydGhkYXkmc3RhdGU9ZXlJME9XVTJZeUk2SW1SaE1qa2lMQ0oxSWpvaWFIUjBjSE02THk5M2QzY3VhVzFrWWk1amIyMHZQM0psWmw4OWJuWmZabUpmYkdkcGJpSXNJbTFoYm5WaGJFeHBibXNpT2lKbVlXeHpaU0o5JnJlZGlyZWN0X3VyaT1odHRwcyUzQSUyRiUyRnd3dy5pbWRiLmNvbSUyRnJlZ2lzdHJhdGlvbiUyRmZhY2Vib29raGFuZGxlciUyRiIgY2xhc3M9InNpZ25pbi1idXR0b24iPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZhY2Vib29rLWxvZ28iPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaWduaW4tZmFjZWJvb2stdGV4dCI+U2lnbiBpbiB3aXRoIEZhY2Vib29rPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9yZWdpc3RyYXRpb24vc2lnbmluP3U9L2ZpbmQlM0ZxJTNETGV0aGFsJTJCV2VhcG9uJTI2cmVmXyUzRG52X3NyX2ZuJnJlZl89bnZfdXNyX2xnaW5fMSIKcmVsPSJsb2dpbiIgY2xhc3M9InNpZ25pbi1vdGhlci1vcHRpb25zLXRleHQiIGlkPSJuYmxvZ2luIiA+T3RoZXIgU2lnbiBpbiBvcHRpb25zPC9hPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgIDwvbGk+CiAgICA8L3VsPgo8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+CgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogbmF2c3RyaXAgLS0+CgkKCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBpbmplY3RlZF9uYXZzdHJpcCAtLT4KCQo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoIm5lIik7CiAgICB9Cjwvc2NyaXB0PgogICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwYWdlY29udGVudCIgY2xhc3M9InBhZ2Vjb250ZW50Ij4KCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBpbmplY3RlZF9iaWxsYm9hcmQgLS0+CgkKPGRpdiBpZD0iY29udGVudC0yLXdpZGUiPgogICAgPGRpdiBpZD0ibWFpbiI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0aWNsZSI+CiAgICAgICA8aDEgY2xhc3M9ImZpbmRIZWFkZXIiPlJlc3VsdHMgZm9yIDxzcGFuIGNsYXNzPSJmaW5kU2VhcmNoVGVybSI+IkxldGhhbCBXZWFwb24iPC9zcGFuPjwvaDE+CgoKICAgICAgICA8ZGl2IGlkPSJmaW5kU3ViSGVhZGVyIj48c3BhbiBpZD0iZmluZFN1YkhlYWRlckxhYmVsIj5KdW1wIHRvOjwvc3Bhbj4KICAgICAgICAgICAgICA8YSBocmVmPSIjdHQiPlRpdGxlczwvYT4gCiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNubSI+TmFtZXM8L2E+IAogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4KICAgICAgICAgICAgICA8YSBocmVmPSIja3ciPktleXdvcmRzPC9hPiAKICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4KCjxkaXYgY2xhc3M9ImZpbmRTZWN0aW9uIj4KPGgzIGNsYXNzPSJmaW5kU2VjdGlvbkhlYWRlciI+PGEgbmFtZT0idHQiPjwvYT5UaXRsZXM8L2gzPgo8dGFibGUgY2xhc3M9ImZpbmRMaXN0Ij4KPHRyIGNsYXNzPSJmaW5kUmVzdWx0IG9kZCI+IDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+IDxhIGhyZWY9Ii90aXRsZS90dDUxNjQxOTYvP3JlZl89Zm5fYWxfdHRfMSIgPjxpbWcgc3JjPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTWpBM01qVTJNVGM1TVY1Qk1sNUJhbkJuWGtGdFpUZ3dNRGszTWpjM09URUAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvdGl0bGUvdHQ1MTY0MTk2Lz9yZWZfPWZuX2FsX3R0XzEiID5MZXRoYWwgV2VhcG9uPC9hPiAoMjAxNikgKFRWIFNlcmllcykgPC90ZD4gPC90cj48dHIgY2xhc3M9ImZpbmRSZXN1bHQgZXZlbiI+IDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+IDxhIGhyZWY9Ii90aXRsZS90dDAwOTM0MDkvP3JlZl89Zm5fYWxfdHRfMiIgPjxpbWcgc3JjPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCWlRsbE5XTmxaamN0TVdRd01TMDBaRGMzTFRnNVpqTXROemhtTnpoak1tVmhZVEZsWGtFeVhrRnFjR2RlUVhWeU5UYzFOVFF4T0RJQC5fVjFfVVgzMl9DUjAsMCwzMiw0NF9BTF8uanBnIiAvPjwvYT4gPC90ZD4gPHRkIGNsYXNzPSJyZXN1bHRfdGV4dCI+IDxhIGhyZWY9Ii90aXRsZS90dDAwOTM0MDkvP3JlZl89Zm5fYWxfdHRfMiIgPkxldGhhbCBXZWFwb248L2E+ICgxOTg3KSA8L3RkPiA8L3RyPjx0ciBjbGFzcz0iZmluZFJlc3VsdCBvZGQiPiA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPiA8YSBocmVmPSIvdGl0bGUvdHQwMzAxNTQzLz9yZWZfPWZuX2FsX3R0XzMiID48aW1nIHNyYz0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk9UVmhNREJsTmpBdE5qazRZUzAwT0RNMUxXSTVOalV0WkdRNVkyUmxOVFZpWkdRd1hrRXlYa0ZxY0dkZVFYVnlOakV4T0RFMU1EY0AuX1YxX1VZNDRfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvdGl0bGUvdHQwMzAxNTQzLz9yZWZfPWZuX2FsX3R0XzMiID5MZXRoYWwgV2VhcG9uPC9hPiAoMTk5MikgKFZpZGVvIEdhbWUpIDwvdGQ+IDwvdHI+PHRyIGNsYXNzPSJmaW5kUmVzdWx0IGV2ZW4iPiA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPiA8YSBocmVmPSIvdGl0bGUvdHQwMDk3NzMzLz9yZWZfPWZuX2FsX3R0XzQiID48aW1nIHNyYz0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1QllUZzBZbUUxTTJJdE5HTTJPQzAwTW1aakxUZ3dNVE10WmpsbU9HRTROMkV5TlRWaFhrRXlYa0ZxY0dkZVFYVnlNVFF4TnpNek5ESUAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvdGl0bGUvdHQwMDk3NzMzLz9yZWZfPWZuX2FsX3R0XzQiID5MZXRoYWwgV2VhcG9uIDI8L2E+ICgxOTg5KSA8L3RkPiA8L3RyPjx0ciBjbGFzcz0iZmluZFJlc3VsdCBvZGQiPiA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPiA8YSBocmVmPSIvdGl0bGUvdHQwMTIyMTUxLz9yZWZfPWZuX2FsX3R0XzUiID48aW1nIHNyYz0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1QlltVTJZVFl3WW1VdE1UWXpPQzAwWXpKbUxUazFORGt0TXpVNFl6QTNOamMxWm1ZMFhrRXlYa0ZxY0dkZVFYVnlORGszTnpVMk1UUUAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvdGl0bGUvdHQwMTIyMTUxLz9yZWZfPWZuX2FsX3R0XzUiID5MZXRoYWwgV2VhcG9uIDQ8L2E+ICgxOTk4KSA8L3RkPiA8L3RyPjx0ciBjbGFzcz0iZmluZFJlc3VsdCBldmVuIj4gPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4gPGEgaHJlZj0iL3RpdGxlL3R0MDEwNDcxNC8/cmVmXz1mbl9hbF90dF82IiA+PGltZyBzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJPVEZsTmpJME5EUXRNemxrTkMwMFpEVTBMV0UwT0RrdFltSTJPVGMyWWpabFptVmxYa0V5WGtGcWNHZGVRWFZ5TVRReE56TXpORElALl9WMV9VWDMyX0NSMCwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiA8L3RkPiA8dGQgY2xhc3M9InJlc3VsdF90ZXh0Ij4gPGEgaHJlZj0iL3RpdGxlL3R0MDEwNDcxNC8/cmVmXz1mbl9hbF90dF82IiA+TGV0aGFsIFdlYXBvbiAzPC9hPiAoMTk5MikgPC90ZD4gPC90cj48L3RhYmxlPgo8ZGl2IGNsYXNzPSJmaW5kTW9yZU1hdGNoZXMiPgogICAgICAgIFZpZXc6Jm5ic3A7IDxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9dHQmcmVmXz1mbl9hbF90dF9tciIKPk1vcmUgdGl0bGUgbWF0Y2hlczwvYT4KICAgICAgICAgICAgJm5ic3A7b3ImbmJzcDsKICAgICAgICAgICAgPGEgaHJlZj0iL2ZpbmQ/cT1MZXRoYWwlMjBXZWFwb24mcz10dCZleGFjdD10cnVlJnJlZl89Zm5fYWxfdHRfZXgiCj5FeGFjdCB0aXRsZSBtYXRjaGVzPC9hPgo8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImZpbmRTZWN0aW9uIj4KPGgzIGNsYXNzPSJmaW5kU2VjdGlvbkhlYWRlciI+PGEgbmFtZT0ibm0iPjwvYT5OYW1lczwvaDM+Cjx0YWJsZSBjbGFzcz0iZmluZExpc3QiPgo8dHIgY2xhc3M9ImZpbmRSZXN1bHQgb2RkIj4gPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4gPGEgaHJlZj0iL25hbWUvbm0wMDg1Nzc0Lz9yZWZfPWZuX2FsX25tXzEiID48aW1nIHNyYz0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk9EUmlNR1V6WW1NdE56SXdNUzAwWmpOaUxUZ3lZamN0WkRBMU1XWTVPVEUzTlRnMVhrRXlYa0ZxY0dkZVFYVnlORFV6T1RRNU1qWUAuX1YxX1VZNDRfQ1IyLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvbmFtZS9ubTAwODU3NzQvP3JlZl89Zm5fYWxfbm1fMSIgPlN0ZXZlIEJsYWNrbWFuPC9hPiAoSSkgPHNtYWxsPihBY3RvciwgPGEgaHJlZj0iL3RpdGxlL3R0Mzk2MDY4Ni8/cmVmXz1mbl9hbF9ubV8xYSIgPldXRiBTaG90Z3VuIFNhdHVyZGF5IE5pZ2h0PC9hPiAoMTk5NykpPC9zbWFsbD4gPGJyLz5uaWNrbmFtZSA8aT4iVGhlIExldGhhbCBXZWFwb24iPC9pPiA8L3RkPiA8L3RyPjwvdGFibGU+CjxkaXYgY2xhc3M9ImZpbmRNb3JlTWF0Y2hlcyI+CiAgICAgICAgVmlldzombmJzcDsgPGEgaHJlZj0iL2ZpbmQ/cT1MZXRoYWwlMjBXZWFwb24mcz1ubSZyZWZfPWZuX2FsX25tX21yIgo+TW9yZSBuYW1lIG1hdGNoZXM8L2E+CjwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iZmluZFNlY3Rpb24iPgo8aDMgY2xhc3M9ImZpbmRTZWN0aW9uSGVhZGVyIj48YSBuYW1lPSJrdyI+PC9hPktleXdvcmRzPC9oMz4KPHRhYmxlIGNsYXNzPSJmaW5kTGlzdCI+Cjx0ciBjbGFzcz0iZmluZFJlc3VsdCBvZGQiPiA8dGQgY2xhc3M9InJlc3VsdF90ZXh0IiBjb2xzcGFuPSIyIj4gPGEgaHJlZj0iL2tleXdvcmQvbGV0aGFsLXdlYXBvbi8/cmVmXz1mbl9hbF9rd18xIiA+bGV0aGFsLXdlYXBvbjwvYT4gKDIgdGl0bGVzKSA8L3RkPiA8L3RyPjx0ciBjbGFzcz0iZmluZFJlc3VsdCBldmVuIj4gPHRkIGNsYXNzPSJyZXN1bHRfdGV4dCIgY29sc3Bhbj0iMiI+IDxhIGhyZWY9Ii9rZXl3b3JkL2xlc3MtbGV0aGFsLXdlYXBvbi8/cmVmXz1mbl9hbF9rd18yIiA+bGVzcy1sZXRoYWwtd2VhcG9uPC9hPiAoNiB0aXRsZXMpIDwvdGQ+IDwvdHI+PHRyIGNsYXNzPSJmaW5kUmVzdWx0IG9kZCI+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiIGNvbHNwYW49IjIiPiA8YSBocmVmPSIva2V5d29yZC9ub24tbGV0aGFsLXdlYXBvbi8/cmVmXz1mbl9hbF9rd18zIiA+bm9uLWxldGhhbC13ZWFwb248L2E+ICgxIHRpdGxlKSA8L3RkPiA8L3RyPjwvdGFibGU+CjxkaXYgY2xhc3M9ImZpbmRNb3JlTWF0Y2hlcyI+CiAgICAgICAgVmlldzombmJzcDsgPGEgaHJlZj0iL2ZpbmQ/cT1MZXRoYWwlMjBXZWFwb24mcz1rdyZyZWZfPWZuX2FsX2t3X21yIgo+TW9yZSBrZXl3b3JkIG1hdGNoZXM8L2E+CiAgICAgICAgICAgICZuYnNwO29yJm5ic3A7CiAgICAgICAgICAgIDxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9a3cmZXhhY3Q9dHJ1ZSZyZWZfPWZuX2FsX2t3X2V4Igo+RXhhY3Qga2V5d29yZCBtYXRjaGVzPC9hPgo8L2Rpdj4KPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGlkPSJzaWRlYmFyIj4KCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiB0b3BfcmhzIC0tPgoJCgo8ZGl2IGNsYXNzPSJhdXgtY29udGVudC13aWRnZXQtMyI+CjxoMz5DYXRlZ29yeSBTZWFyY2g8L2gzPgo8cD5TZWFyY2ggZm9yICJMZXRoYWwgV2VhcG9uIiB3aXRoaW4gYSBzcGVjaWZpYyBjYXRlZ29yeToKPHVsIGNsYXNzPSJmaW5kRmlsdGVyTGlzdCI+CjxsaSBjbGFzcz0iZmlsdGVyQWN0aXZlIj5BbGw8L2xpPgo8bGkgPjxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9bm0mcmVmXz1mbl9ubSIKPk5hbWU8L2E+IDxzcGFuPihhY3Rvciwgd3JpdGVyLCBkaXJlY3RvciwgZXRjKTwvc3Bhbj48L2xpPgo8bGkgPjxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9dHQmcmVmXz1mbl90dCIKPlRpdGxlPC9hPiA8c3Bhbj4obW92aWUsIFRWLCB2aWRlbyBnYW1lKTwvc3Bhbj48L2xpPgogICA8dWwgY2xhc3M9ImZpbmRUaXRsZVN1YmZpbHRlckxpc3QiPgogICAgICAgPGxpID48YSBocmVmPSIvZmluZD9xPUxldGhhbCUyMFdlYXBvbiZzPXR0JnR0eXBlPWZ0JnJlZl89Zm5fZnQiCj5Nb3ZpZTwvYT48L2xpPgogICAgICAgPGxpID48YSBocmVmPSIvZmluZD9xPUxldGhhbCUyMFdlYXBvbiZzPXR0JnR0eXBlPXR2JnJlZl89Zm5fdHYiCj5UVjwvYT48L2xpPgogICAgICAgPGxpID48YSBocmVmPSIvZmluZD9xPUxldGhhbCUyMFdlYXBvbiZzPXR0JnR0eXBlPWVwJnJlZl89Zm5fZXAiCj5UViBFcGlzb2RlPC9hPjwvbGk+CiAgICAgICA8bGkgPjxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9dHQmdHR5cGU9dmcmcmVmXz1mbl92ZyIKPlZpZGVvIEdhbWU8L2E+PC9saT4KICAgPC91bD4KPGxpID48YSBocmVmPSIvZmluZD9xPUxldGhhbCUyMFdlYXBvbiZzPWNvJnJlZl89Zm5fY28iCj5Db21wYW55PC9hPjwvbGk+CjxsaSA+PGEgaHJlZj0iL2ZpbmQ/cT1MZXRoYWwlMjBXZWFwb24mcz1rdyZyZWZfPWZuX2t3Igo+S2V5d29yZDwvYT48L2xpPgoKPGxpPjxhIGhyZWY9Ii9zZWFyY2gvdGl0bGUtdGV4dD9wbG90PUxldGhhbCUyMFdlYXBvbiZyZWZfPWZuX3BsIgo+UGxvdCBTdW1tYXJpZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Ii9zZWFyY2gvbmFtZS10ZXh0P2Jpbz1MZXRoYWwlMjBXZWFwb24mcmVmXz1mbl9iaSIKPkJpb2dyYXBoaWVzPC9hPjwvbGk+CjxsaT48YSBocmVmPSIvc2VhcmNoL3RpdGxlLXRleHQ/cXVvdGVzPUxldGhhbCUyMFdlYXBvbiZyZWZfPWZuX3F1Igo+UXVvdGVzPC9hPjwvbGk+CjwvdWw+CjwvZGl2PgoJCgk8IS0tIG5vIGNvbnRlbnQgcmVjZWl2ZWQgZm9yIHNsb3Q6IHJoc19jb3JuZXJzdG9uZSAtLT4KCQo8ZGl2IGNsYXNzPSJhdXgtY29udGVudC13aWRnZXQtMyI+CiAgICA8aDM+QWRkaXRpb25hbCBTZWFyY2ggT3B0aW9uczwvaDM+CiAgICA8dWwgY2xhc3M9ImZpbmRTZWFyY2hPcHRpb25zTGlzdCI+CiAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2gvP3JlZl89Zm5fYXNyIgo+QWR2YW5jZWQgU2VhcmNoPC9hPjwvbGk+CiAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/cmVmXz1mbl9hc3JfdHQiCj5BZHZhbmNlZCBUaXRsZSBTZWFyY2g8L2E+PC9saT4KICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaC9uYW1lP3JlZl89Zm5fYXNyX25tIgo+QWR2YW5jZWQgTmFtZSBTZWFyY2g8L2E+PC9saT4KICAgIDwvdWw+CiAgICA8aHIgLz4KPGRpdiBjbGFzcz0iZmluZEVuYWJsZUFkdWx0VG9nZ2xlIj4KICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj9yZWZfPWZuX2FkIgo+TG9nIGluPC9hPiB0byBlbmFibGUgYWR1bHQgdGl0bGVzL25hbWVzIGluIHlvdXIgc2VhcmNoZXMuCjwvZGl2Pgo8L2Rpdj4KCgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogYm90dG9tX3JocyAtLT4KCQogICAgPC9kaXY+CjwvZGl2PgogICAgICAgICAgICAgICAgICAgPGJyIGNsYXNzPSJjbGVhciIgLz4KICAgICAgICAgICAgICAgIDwvZGl2PgoKCiAgICA8ZGl2IGlkPSJmb290ZXIiIGNsYXNzPSJmdCI+CiAgICAgICAgICAgIDxkaXYgaWQ9InJ2aS1kaXYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjZW50bHktdmlld2VkIj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyaHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBpZD0iY2xlYXJfcnZpIiBocmVmPSIjIj5DbGVhciB5b3VyIGhpc3Rvcnk8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGgzPlJlY2VudGx5IFZpZXdlZDwvaDM+CiAgICAgICAgICAgICAgICAgICAgPGJyIGNsZWFyPSJhbGwiIC8+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW1zIj4mbmJzcDs8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGJyIGNsYXNzPSJjbGVhciI+CiAgICAgICAgICAgIDwvZGl2PgoKCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBib3R0b21fYWQgLS0+CgkKCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGZvb3Rlci1ncmlkLXdyYXBwZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgZm9vdGVyLXJvdyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgb3V0c2lkZSI+CiAgICA8aDM+SU1EYiBFdmVyeXdoZXJlPC9oMz4KICAgIDxkaXYgY2xhc3M9ImFwcC1saW5rcyI+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnRfYXBwX2FwcGxlJnRva2VuPUJDWXVFc1k0LW12dVBkaVV4MEtoZGtUeW5OT2U2WTdMbmdxZnpWU1ozOWpVSnZfZmpfTURoVE91eHhpc21rWjZONE1nZnM0a0tJZF8lMEQlMEFPazdGZlRHMjlmTUdFVjFkbzMwRWQ4T2FacDdWUS1kMS1nbEJ0b0FfQkxqQVNpSmlsczZJd1lDM0d6d1d4MEZBYl9rM2VOMVhOTlJaJTBEJTBBeUxhSTZ4NUVXS3ZtbGhlbkpRVXlTdWFXN0RJU0FqcHVPM2EtaVpKVnozajI2UVpwZlhWWkFEYkV2VVVDb2QybjNBJTBEJTBBJnJlZl89ZnRfYXBwX2FwcGxlIgp0aXRsZT0iR2V0IHRoZSBJTURiIEFwcCBvbiB0aGUgQXBwbGUgQXBwIFN0b3JlIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgYXBwc3RvcmUtYXBwbGUiID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdF9hcHBfZ29vZ2xlJnRva2VuPUJDWWhwRHdzblk3Z2xiaWtlUHZqTnJvTnd4TV92RHhlTU5sSGxJSzF4WFhYZWxTcUh4c293ZVRXb3owWWxVV0F5dVVFS09IVVdyVk0lMEQlMEFmaWlsa19oUWd6UUd5dVRfc1Q0MmZNY2RFdmtYM09LM0RjWm15WkdxcnBkQ2plUFUwblg1YXZsYXY5UjNjb0F4NFlnQ1NwMW9sWWdWJTBEJTBBMXJuaGMyMFBqUC1UNV9aQzdaWVg4ZUhSQnlBVk1QUWt1dFA0OXFkVUNwczJzQ0ZQYnpZc3JXeS1ROFVLR1l6LU9RJTBEJTBBJnJlZl89ZnRfYXBwX2dvb2dsZSIKdGl0bGU9IkdldCB0aGUgSU1EYiBhcHAgb24gR29vZ2xlIFBsYXkiIHRhcmdldD0iX2JsYW5rIiA+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBhcHBzdG9yZS1nb29nbGUiID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdF9hcHBfYW1hem9uJnRva2VuPUJDWWg4czFqT3RWUHAxZHlFaHpiYkV0dXFXUkNYQ3hNVEh3V3dyUzhTa1dFMTlNd1cyWU1XYmhCb19KQVEyYXFBQmdISnpialNNWm0lMEQlMEFaTHh2WjFRUVFscUxnSmV6QmdseUk2eXZqWkpzZExUY3Rnb2dIQ0RpLVBYWGpfV0tXNjh1SlFrOXBlMFRPS0pzbjZpR1hKYWJFd0VTJTBEJTBBaW11WmktbGFHcnhDOWU0RTVWVWdmVkpCOEpmc2hPRDVVZEFqT2txcmFzQ3lVVUkwSnVxTGpaSDFFS3gxN3pTcDRuM3VBdmtXSmMtaCUwRCUwQVE5YTdXV2E4dDZBeWhKSExwQzk1VXhYajRkVlJoZjM1OG0xMmlIRFdZMnJoQ1U3anZiQXE4aWJyUFlxMGFCTVVPYXpYVDJEYXR0STYlMEQlMEFYZXdjRkVUZlJvVWFGZjF0VDdnRnFqV21NOVBkRUF4TGNSVWRlMm9vQUNKVlNld0lGeHA4b3FreDdvRU5OZDVmWHZpdG1BbnlnWWZFJTBEJTBBUTFQcjNRSlZSbnQtRF9nNnBycG80RVNFdkF2ZlNRJTBEJTBBJnJlZl89ZnRfYXBwX2FtYXpvbiIKdGl0bGU9IkdldCB0aGUgSU1EYiBhcHAgb24gQW1hem9uIEFwcHN0b3JlIGZvciBBbmRyb2lkIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgYXBwc3RvcmUtYW1hem9uIiA+PC9zcGFuPgo8L2E+CiAgICA8L2Rpdj4KCiAgICA8cD5GaW5kIHNob3d0aW1lcywgd2F0Y2ggdHJhaWxlcnMsIGJyb3dzZSBwaG90b3MsIHRyYWNrIHlvdXIgV2F0Y2hsaXN0IGFuZCByYXRlIHlvdXIgZmF2b3JpdGUgbW92aWVzIGFuZCBUViBzaG93cyBvbiB5b3VyIHBob25lIG9yIHRhYmxldCE8L3A+CgogICAgPGEgaHJlZj0iaHR0cHM6Ly9tLmltZGIuY29tP3JlZl89ZnRfbWRvdCIKY2xhc3M9InRvdWNobGluayIgPklNRGIgTW9iaWxlIHNpdGU8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBjZW50ZXIiPgogIDxkaXYgY2xhc3M9ImxpbmstYmFyIGljb24tbGluay1iYXIiPgogICAgPGgzPgogICAgICBGb2xsb3cgSU1EYiBvbgogICAgICA8ZGl2PgoKICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfZmImdG9rZW49QkNZcjN2NmVMQW0xbmk4Q25SVGZCWmJHQXRRUjlCcm5zVHRJVjh6U3RnMll3dFFjb3RxRW04dmZwZ2VjbEd2MnpBYlpRVmJ2blJKMSUwRCUwQWFuNFY0aGY1dTNBX296ZnhwbWpic3ZTa0pZT2JwQnRfTTczOVd4a0NUZUhNSkZteGUtM2FzU0VPVHFGMTF0WHdmVjNnY0tVc0lSNS0lMEQlMEFDengxd2FqZm9hbTF3aC05Unl6UFladVhtaS1COVVDUEltdHRZb3RxQ3BGSCUwRCUwQSZyZWZfPWZ0X2ZvbF9mYiIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIEZhY2Vib29rIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LWZhY2Vib29rIiA+PC9zcGFuPgo8L2E+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249Zm9sX3R3JnRva2VuPUJDWWxQcVFPRTVsVXIwWW5QY3JjeXpZMHFZYms1djlBcHB0a0plMzdOQWV3NVROSHNZbDVDTDRZSGI0RlUxd0QwTGZEd1pFaEc5dVclMEQlMEFQYlJHN0FURU5wTThwQTNBckhTTHRzX2l5Y3ltcHNyVkYwT1JpUWluU3M0ZWhzVlNETzJUeU5maVgtWHVfSUxjQ0FvekhrTmxqWW00JTBEJTBBM1NxZG83RG1aVXlucm92dk93dTVQRXBDZVZ0WE43S0R0Nl90aVR3NjJnSlElMEQlMEEmcmVmXz1mdF9mb2xfdHciCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBUd2l0dGVyIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LXR3aXR0ZXIiID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfaW5zdCZ0b2tlbj1CQ1lpbTlKcURMY2tFaF9wdXV1ckhRMGJFbXV3WXpwXzAwQTdXNi1fWk9sY25WUFVaXzhMWmo5ZmdaazBFeG9SVFR3Sk5PNHZGcHdpJTBEJTBBT2tEbUotZXg0RmJVTnQ4M0RObTAyRlN0ZkNWWDM4NTJEN1J3MlhVcWhubWwtU3hGdUEwVnp4MXU4d1d6aGpqV1dtcHJyY1I2aWRzUyUwRCUwQUwwaHdNQXhtZ0ozM09hMHdzMkxoYzFTTEl6TkZIdzNTT2VwNElIWk5nNUcxJTBEJTBBJnJlZl89ZnRfZm9sX2luc3QiCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBJbnN0YWdyYW0iIHRhcmdldD0iX2JsYW5rIiA+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBmb2xsb3ctaW5zdGFncmFtIiA+PC9zcGFuPgo8L2E+CiAgICAgIDwvZGl2PgogICAgPC9oMz4KICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIG91dHNpZGUiPgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgY29sLTQiPgogICAgICAgICAgICA8dWwgY2xhc3M9InVuc3R5bGVkIj4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvP3JlZl89ZnRfaG0iCj5Ib21lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NoYXJ0L3RvcD9yZWZfPWZ0XzI1MCIKPlRvcCBSYXRlZCBNb3ZpZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvP3JlZl89ZnRfY2h0Igo+Qm94IE9mZmljZTwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii90di8/cmVmXz1mdF90diIKPlRWPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL21vdmllcy1jb21pbmctc29vbi8/cmVmXz1mdF9jcyIKPkNvbWluZyBTb29uPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2Eyej9yZWZfPWZ0X3NpIgo+U2l0ZSBJbmRleDwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2g/cmVmXz1mdF9zciIKPlNlYXJjaDwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9tb3ZpZXMtaW4tdGhlYXRlcnMvP3JlZl89ZnRfaW50aCIKPkluIFRoZWF0ZXJzPC9hPjwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sIGNvbC00Ij4KICAgICAgICAgICAgPHVsIGNsYXNzPSJ1bnN0eWxlZCI+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9oZWxwLmltZGIuY29tL2ltZGI/cmVmXz1mdF9jb24iCj5Db250YWN0IFVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+ICAgICAgICA8YSBocmVmPSJodHRwczovL3NlY3VyZS5pbWRiLmNvbS9yZWdpc3Rlci1pbWRiL2Zvcm0tdjI/cmVmXz1mdF9yZWciCj5SZWdpc3RlcjwvYT4KPC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbmV3cy8/cmVmXz1mdF9udyIKPk5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wcmVzc3Jvb20vP3JlZl89ZnRfcHIiCj5QcmVzcyBSb29tPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9hZHZlcnRpc2luZy5hbWF6b24uY29tL2xwL2ltZGI/cmVmXz1mdF9hZCIKPkFkdmVydGlzaW5nPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2pvYnM/cmVmXz1mdF9qYiIKPkpvYnM8L2E+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgY29sLTQiPgogICAgICAgICAgICA8dWwgY2xhc3M9InVuc3R5bGVkIj4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3Byby5pbWRiLmNvbS9zaWdudXAvaW5kZXguaHRtbD9yZj1jb25zX2Z0X2htJnJlZl89Y29uc19mdF9obSIKPklNRGJQcm88L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LW1vam8mdG9rZW49QkNZaUpSQi1Lc2xmWmk0X3c1S2FTZmlIRTNaYllPS0o2Ty05bnk4Y29OREJaM2NUU0JEQV92aUFEb3BsZ1VxSHYzRWRoeEh5Ym55biUwRCUwQWU1V1ctZEhFNkNadnhSOHhreGhpYWZYaWNkLVYzTWNqM3NzaWIwMlRkMFJQMzR3RF9xblE0VVIzZVNpRmIxam9sUWN0aDQtSzJXYkwlMEQlMEFZX00tbmxRSmVBSGllcjljOGZLT1V4dElWTlFpNVRKMGxMTG5uXzFfdUROayUwRCUwQSZyZWZfPWZ0X2JvbSIKPkJveCBPZmZpY2UgTW9qbzwvYT4KPC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LXdhYiZ0b2tlbj1CQ1lvR1djR3Y0LXhRbzI1ajc0V284THhQRFF0eG43MkRIUTl2dWNYRnRLenNfdUVLbkVDWkdBVnZ6WmpLaWpJNUJVanpUS1RTSTdxJTBEJTBBUDN1RERpaFRpV1NnbEZaZjkxWDM5NVpCQmFzNzVBNlpWWHFOal8weElQQ2M4akt1NjRFaTNiX0NHOEw2QURRcjhRM053ckVYdEpwViUwRCUwQThCaXU4UDA0VW1wNXd5eFRDbnMzYkZjbWdrODRUdWFHRUlSQkZoZ3Q4Ml85JTBEJTBBJnJlZl89ZnRfd2FiIgo+V2l0aG91dGFib3g8L2E+CjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY29uZGl0aW9ucz9yZWZfPWZ0X2NvdSIKPkNvbmRpdGlvbnMgb2YgVXNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3ByaXZhY3k/cmVmXz1mdF9wdmMiCj5Qcml2YWN5IFBvbGljeTwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtaWJhJnRva2VuPUJDWWc5VnFvUWV3SDczWTQ5bDFqaDh6TTZZXzRVd21UYk1pSUlCRFNiNTIwNGtYZ21BaUJxS05obXNxeEdCZlBqX1FIWjh1SkZLVFIlMEQlMEFOTThydmNzRV9lcjVRSzR6dTg3bFVtaWF3M1hHdDFjUnp6enZWVlFxZGQ3cFRBNGFQRlpKaF9EclJnTUQtY3AwQmh2V1dmV1dBY3dlJTBEJTBBSnNYUWlIQmE1YU11MHFTcXpSQmtvVUNLZWp5UG1MdmU4V3d5TFFjTk5xWXliMUltNkZJbVN2eGdVVVA1Rmx1b3NsbDZ6a1k1Snh1OCUwRCUwQVlkNl9CZ3pMbTdrJTBEJTBBJnJlZl89ZnRfaWJhIgo+SW50ZXJlc3QtQmFzZWQgQWRzPC9hPgo8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZnQtY29weSBmbG9hdC1yaWdodCI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvY29uZGl0aW9ucyIKPkNvcHlyaWdodCAmY29weTs8L2E+IDE5OTAtMjAxOAogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9oZWxwLmltZGIuY29tL2ltZGI/cmVmXz1jb25zX2Z0cl9pbWRiIgo+SU1EYi5jb20sIEluYy48L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgQW4gPHNwYW4gaWQ9ImFtYXpvbl9sb2dvIiBjbGFzcz0iZm9vdGVyX2xvZ28iIGFsaWduPSJtaWRkbGUiPkFtYXpvbi5jb208L3NwYW4+IGNvbXBhbnkuCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKCgogICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGlkPSJhbWF6b24tYWZmaWxpYXRlcyI+CiAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQgY29sc3Bhbj0iOCI+CiAgICAgICAgICAgICAgICBBbWF6b24gQWZmaWxpYXRlcwogICAgICAgICAgICA8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPHRyPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYWl2JnRva2VuPUJDWXZIczBUcVpEdXFfa1VOS1VEUThob19PYm5NcDNSaVpmek44N1E4N3ltc2lrYkFhSU5xS2hSNjdvVDZNTTVBbzVFVExyZEpzdEwlMEQlMEFhcnQ3US1GSlkwejR0aWlPS0s5Zmhsekw0Qi1JUXZ2X2g4UmZKX3RadXpDWlNiRldqMlFTQ0pFdklJNXpMeHgwUENnaGdXc19XTk9ZJTBEJTBBYzhuamYweUczRDFybFBQQndrWnMyTldCTUdwYnNqa1BpY25teldNY3hkOS1RVWp2eUJnX1pQTjNla0NyMnNnMGFSRWthZmJJdXdEUSUwRCUwQU5hTkFXaUM0RkhRJTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5BbWF6b24gVmlkZW88L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5XYXRjaCBNb3ZpZXMgJjxicj5UViBPbmxpbmU8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1waXYmdG9rZW49QkNZa3RFeURzZkQ1QzRJaGMwUHVUX0N1Um11MVJvbV90RWdQUjVSWUxQZHlGcFM2eE53SlVDX21USnBYSnJMcFJaaExWUUFhM21vViUwRCUwQThpb0lZaGN3UFZ0N3FibG82UEVHUWViU1dwV2VJdjFsdVpBZ24yYnc3VFVROUhkaWtRdlFKOWVadm9wXy1KeVB2clZFUHN2NS1HdmQlMEQlMEE1TE1HT3c4WUJOWkpFdC1aeGRPclVOajRHOEpmYjhVMjE2UjhZM3NIVTFIbG5fZFJ2VlVocWpNWnJQbU5ldlZld20yNjIxWjZ3YmVYJTBEJTBBNEE4RWpWZjlIT2clMEQlMEEiIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbGluayI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLW5hbWUiPlByaW1lIFZpZGVvPC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+VW5saW1pdGVkIFN0cmVhbWluZzxicj5vZiBNb3ZpZXMgJiBUVjwvc3Bhbj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgPC90ZD4KCiAgICA8dGQ+CiAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LWFtem4tZGUmdG9rZW49QkNZb3hGNHhNdXRLUzVUeWFlaWZ6cGJaT2JacDREZWppQzVJXzRzb1ZibWxvRzA4cC1xSURidVhtejRZZlFIQ0luaFZlU0JJYW9SRCUwRCUwQXhfTDA2RU9HckFncE5QSmY5MGNobDJnXzFRN0RBWEE0a1lOVURBVXU0WlRPOGlfU1NXOFZkdHN1c1hsSHRTUEpvZV91T3l3RmV6WnUlMEQlMEE0S0lLSXotYXBZR1I4TWhJT0NKSjQ1YklMQ2lRM2docDR1T3QtTHJoMjQzZmdIVXRWcXZWUDB0OEI3bXJMcHZiam9vZW4xQWxoeVVaJTBEJTBBWlhST2tQdTlQRWclMEQlMEEiIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbGluayI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLW5hbWUiPkFtYXpvbiBHZXJtYW55PC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+QnV5IE1vdmllcyBvbjxicj5EVkQgJiBCbHUtcmF5PC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1pdCZ0b2tlbj1CQ1lrMUxMUGYwUTlESHdtMTZLQmIxWS1xd0kzdGhBdEQ2OFdzempTWEp1SDQ2Z2FQNzVCbEh4YUFVdHBBMXNmc2NjQ0NQa2FhNWxWJTBEJTBBdXNSbTUyNlVpRmF3WFZIX0pRUDlLZkFEZHJvejNvaE9Dd2dGcTJpQ0hyY2pIeHBYWFUxaWFpUkU0R096ZUNFYV9tRU9NMzVKdjJWbSUwRCUwQXFDZG13a1dLNDFnTC1OZ3RMdllQWTBRczVIOHZ0YzJyS2Zub0RVa0F0YUlQb1h3bmFOd045WTNNZ2I3bWNmVjh1OEtXUlQwWEFramglMEQlMEFWLWtLOWZvcXNCbyUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QW1hem9uIEl0YWx5PC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+QnV5IE1vdmllcyBvbjxicj5EVkQgJiBCbHUtcmF5PC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1mciZ0b2tlbj1CQ1lwbTN3OVQtRzhvUjF4b1pfMzJhWkdRWS1iYTl0UURUZWlPX2QydU1hVXZ1OFVpbG56S2RYbWRUcDVESXhqV3hqXzZQM2JaMWxxJTBEJTBBeXZnQTVWZjhrM2NjaXkxT010UjAwclVZTmw2QmhvNERjUUFaa083OTFvUFkxX0laWmxjLVU5ZTA2ejFqdDZEWUEyQkZTY0hFeTczRSUwRCUwQXFzMXNVU2VKdzU1ZU9xNHJPdFEtaEpRTnJvUk5sSW05NC1ndUxxeEpvRm9MYzRWZkltdmpNWk9iN1RiR1dyMURPOTNzc3g3LU5vOTklMEQlMEFJaldtQmtiRjA3NCUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QW1hem9uIEZyYW5jZTwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPkJ1eSBNb3ZpZXMgb248YnI+RFZEICYgQmx1LXJheTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgPC90ZD4KCiAgICA8dGQ+CiAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LWFtem4taW4mdG9rZW49QkNZdW1QNWl6d1VTVFJIMXA1Skk4YWdVb294N19haGd6VTZ5S19KYjlyZ1ItTWNESzI0QUt5ZWc0SjMtRl9ScVRJLWkwd3RqQnVZVyUwRCUwQTNZd1hWZzRSaktJYmJucENReFFnanV6WTFGS0twYnV3YXNKNHpsNHFfZHJ1WnVfZnNucE45VW4tYzZoa2pEbFEyUFliQWx6RW1kdXElMEQlMEFsWmV2X1RRbHFVVndTeEVoblhOSlFyaTRDd29UdEFuNUpFNHV3RzY3bjF5NXZIUG90VDRWTlhldzA0MTJiQ09HR0x2NFVJeEVwZk42JTBEJTBBN2lfN0hRdlhocTJINjB0UkxJX0dGQXlHT1V6ajhwWkolMEQlMEEiIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbGluayI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLW5hbWUiPkFtYXpvbiBJbmRpYTwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPkJ1eSBNb3ZpZSBhbmQ8YnI+VFYgU2hvdyBEVkRzPC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1kcHImdG9rZW49QkNZcmVNdi0tUUYwUEZPUTMzUFZxajZRal94dEVQNkJaa1NNN2kxQWJyR1FpUk1VRWpQakxPWTlpM0c0RThjQnBFQ1podXZmcXFITCUwRCUwQTdRd3Aweml4YnIxVkVEQk1rcW5Fd2pqQ2lIeUJFNENsQkFGdTBzV1BMNmhJOWRFelcwTFFkaG5GSml6QTg0TUxuYWQxTXdWSnpkVU0lMEQlMEF1ekcwSUxOZGdOcWgzRjNfTC0tdFJrQSUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+RFBSZXZpZXc8L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5EaWdpdGFsPGJyPlBob3RvZ3JhcGh5PC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1hdWQmdG9rZW49QkNZcTJCVGM0M0hfVGJhVnZHa24xNEk4a01UMDdDdHRhWFdGODVEa1RCaTBxRF9TeExRMFZJX2Y2RmpUeXpOZUVxT212Ty1Vamo2aSUwRCUwQU1ob0tBYW1jTlNjT3h5S01YNVhZM3Y0aVU5djVIRXlnVlhMUjRXbUhlM0NDS1JjTks2RkhtOWo5c0RIS19ELUN6ZURFMEo3TXV5VGUlMEQlMEF0bnpqZTNfUjhCa1laNm5kUi1qVk13TSUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QXVkaWJsZTwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPkRvd25sb2FkPGJyPkF1ZGlvIEJvb2tzPC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgogICAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogICAgICA8L2Rpdj4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICB0cnkgewogICAgICAgICAgICB3aW5kb3cubHVtaWVyZVBsYXllciA9IHdpbmRvdy5sdW1pZXJlUGxheWVyIHx8IHt9OwogICAgICAgICAgICB3aW5kb3cubHVtaWVyZVBsYXllci53ZWJsYWIgPSBKU09OLnBhcnNlKCd7IklNREJfVklERU9fUExBWUVSXzE1MjI1OCI6IlQxIiwiSU1EQl9WSURFT19QTEFZRVJfMTYwMDU0IjoiQyIsIklNREJfVklERU9fUExBWUVSXzE1MjY1MSI6IlQxIiwiSU1EQl9WSURFT19QTEFZRVJfMTU2NjUwIjoiVDEifScpOwogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIGlmICh3aW5kb3cudWVMb2dFcnJvcikgewogICAgICAgICAgICAgICAgd2luZG93LnVlTG9nRXJyb3IoZXJyb3IsIHsKICAgICAgICAgICAgICAgICAgICBsb2dMZXZlbDogIldBUk4iLAogICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0aW9uOiAidmlkZW9wbGF5ZXIiLAogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICJGYWlsZWQgdG8gcGFyc2Ugd2VibGFicyBmb3IgdmlkZW8gcGxheWVyLiIKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgPC9zY3JpcHQ+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvanMvY29sbGVjdGlvbnMvY29tbW9uLTE4MTg0MTMwMDQuX0NCNDk5NjAzNzYxXy5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvanMvY29sbGVjdGlvbnMvanF1ZXJ5LTIxMzQzMjI2MzQuX0NCNDk5NTU5MDA3Xy5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvanMvY29sbGVjdGlvbnMvY29uc3VtZXJzaXRlLTI2MDYyMzA1OTUuX0NCNDczOTkwNjQ1Xy5qcyI+PC9zY3JpcHQ+CgoKCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBpZD0ibG9naW4iPgooZnVuY3Rpb24oKXsKICAgIHZhciByZWFkeVRpbWVvdXQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsKICAgICAgICBpZiAod2luZG93LmpRdWVyeSAmJiB3aW5kb3cuaW1kYiAmJiB3aW5kb3cuaW1kYi5sb2dpbl9saWdodGJveCkgewogICAgICAgICAgICBjbGVhclRpbWVvdXQocmVhZHlUaW1lb3V0KTsKICAgICAgICAgICAgd2luZG93LmltZGIubG9naW5fbGlnaHRib3goKTsKICAgICAgICB9CiAgICB9LCAxMDApOwp9KSgpOwo8L3NjcmlwdD4KCgogICAgICAgIAogICAgICAgIDxkaXYgaWQ9InNlcnZlcnRpbWUiIHRpbWU9IjQ1Ii8+CgoKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiKTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgCiAgICA8L2JvZHk+CjwvaHRtbD4KCg==
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:15 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:16 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640596; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:23
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:23 GMT; Path=/; Secure
      - uu=BCYp5y38t0OEMBV0gAc4IhM4pgx0k00c42-LBmJzCXDH2djjgOdFAF827zcKPGWnwNp5JXxrzpoR%0D%0A5lbtLisOj_6NcSTAnDtcdhluM_Uki0te6StZLGBwobLSZnLJPvlr5RP7wsB6lZGPmZjRNeT00d9b%0D%0AFXs1KB_0C4sGJ_NYPdi3ynDXHB9PYlIMPflAo03JPjfuMrFK_fAIMWiF8yG0JWZv5tJ9rfQjQxgo%0D%0Av6m3jcEyC57pGLIvcqsYnYjkQczSsoWb7m09j1Ybo3D4VUJ9k38Mc5-VNQai8wmFjxJEMfc-gLI%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:23 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:16 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:16 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640596; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:23
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:23 GMT; Path=/; Secure
      - uu=BCYvWdqbbhTMLv5lD0cxxzUbnmIKIeTOVm8kHPCwK2BZITUe9sbm5ZTJdTqJcz4ZfZYUl9Fhqzq4%0D%0An_Xg5tbI-Pn4rb88itVB85h4i0hMEB1EMEQyD4YXuCKFlhr0JITRibiLNr3EFO-vn7GTJytZFnDl%0D%0A0T2SkBvsdYCxg-X169rhVt-2BA7JpqGsv8lZq4DuNbaKfQLJA5SFf84PcUMkF44fktWB7zrzBzQW%0D%0AymJee6VluHykpDU_v2Zc6ihsJTekTGMzpv8dBQKirvLsWcU8e0_ToABieOyeZ2ShZO_mJ6BBXkw%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:23 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:17 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:17 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640597; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:24
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:24 GMT; Path=/; Secure
      - uu=BCYtXHbIdz-j-gLqYqeMUufpYPI7mM4ybfyEOYL2GJlSXXtg4plNOrzHiJQGNqj31nXG-fVg9U9M%0D%0Af22-mDw8842_185GnqHXQOWMsqXwDfQKFLiNIEct4k1MB53F6_np-yKMWWXnfAdntnv0y4VrnzYi%0D%0Ak6gS87on2Hy3_8ZyWnBdnkPvRiwY4bFnsjmgT3USdC9N1EzC3EzPG0eZ3zv0vSye2jvdXgrncTtW%0D%0AMVBZh6JwaRaVQpsqWrjg4Q2K62hgV2rxxMRTBp2LuPqExDHO9paVzLMWRheObONzBT54K9CciSI%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:24 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        CgoKCjwhRE9DVFlQRSBodG1sPgo8aHRtbAogICAgeG1sbnM6b2c9Imh0dHA6Ly9vZ3AubWUvbnMjIgogICAgeG1sbnM6ZmI9Imh0dHA6Ly93d3cuZmFjZWJvb2suY29tLzIwMDgvZmJtbCI+CiAgICA8aGVhZD4KICAgICAgICAgCiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CgogICAgPG1ldGEgbmFtZT0iYXBwbGUtaXR1bmVzLWFwcCIgY29udGVudD0iYXBwLWlkPTM0Mjc5MjUyNSwgYXBwLWFyZ3VtZW50PWltZGI6Ly8vP3NyYz1tZG90Ij4KCgoKICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+dmFyIElNRGJUaW1lcj17c3RhcnR0aW1lOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSxwdDonamF2YSd9Ozwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJMb2FkVGl0bGUiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcHJlX3RpdGxlIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KICAgICAgICA8dGl0bGU+RmluZCAtIElNRGI8L3RpdGxlPgogIDxzY3JpcHQ+KGZ1bmN0aW9uKHQpeyAodC5ldmVudHMgPSB0LmV2ZW50cyB8fCB7fSlbImNzbV9oZWFkX3Bvc3RfdGl0bGUiXSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9KShJTURiVGltZXIpOzwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIkxvYWRUaXRsZSIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJMb2FkVGl0bGUiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CgogICAgICAgIDxsaW5rIHJlbD0iY2Fub25pY2FsIiBocmVmPSJodHRwczovL3d3dy5pbWRiLmNvbS9maW5kIiAvPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cuaW1kYi5jb20vZmluZCIgLz4KCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmIiLCAiTG9hZEljb25zIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+KGZ1bmN0aW9uKHQpeyAodC5ldmVudHMgPSB0LmV2ZW50cyB8fCB7fSlbImNzbV9oZWFkX3ByZV9pY29uIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KICAgICAgICA8bGluayBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9zYWZhcmktZmF2aWNvbi01MTc2MTEzODEuX0NCNDk5NjEzNjkyXy5zdmciIG1hc2sgcmVsPSJpY29uIiBzaXplcz0iYW55Ij4KICAgICAgICA8bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL2ljbyIgaHJlZj0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvZmF2aWNvbi0yMTY1ODA2OTcwLl9DQjQ5OTYxMzU1Nl8uaWNvIiAvPgogICAgICAgIDxtZXRhIG5hbWU9InRoZW1lLWNvbG9yIiBjb250ZW50PSIjMDAwMDAwIiAvPgogICAgICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9kZXNrdG9wLWZhdmljb24tMjE2NTgwNjk3MC5fQ0I0OTk2MDM4MzhfLmljbyIgLz4KICAgICAgICA8bGluayBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9tb2JpbGUvYXBwbGUtdG91Y2gtaWNvbi13ZWItNDE1MTY1OTE4OC5fQ0I0OTk2MTM2MDlfLnBuZyIgcmVsPSJhcHBsZS10b3VjaC1pY29uIj4gCiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbW9iaWxlL2FwcGxlLXRvdWNoLWljb24td2ViLTc2eDc2LTUzNTM2MjQ4Ll9DQjQ5OTYwMzgzMV8ucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSI3Nng3NiI+IAogICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL21vYmlsZS9hcHBsZS10b3VjaC1pY29uLXdlYi0xMjB4MTIwLTI0NDI4Nzg0NzEuX0NCNDk5NjEzNjQ1Xy5wbmciIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9IjEyMHgxMjAiPiAKICAgICAgICA8bGluayBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9tb2JpbGUvYXBwbGUtdG91Y2gtaWNvbi13ZWItMTUyeDE1Mi0xNDc1ODIzNjQxLl9DQjQ5OTYwMzgzNV8ucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSIxNTJ4MTUyIj4gICAgICAgICAgICAKICAgICAgICA8bGluayByZWw9InNlYXJjaCIgdHlwZT0iYXBwbGljYXRpb24vb3BlbnNlYXJjaGRlc2NyaXB0aW9uK3htbCIgaHJlZj0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvaW1kYnNlYXJjaC0zMzQ5NDY4ODgwLl9DQjQ5OTU1ODg3OV8ueG1sIiB0aXRsZT0iSU1EYiIgLz4KICA8c2NyaXB0PihmdW5jdGlvbih0KXsgKHQuZXZlbnRzID0gdC5ldmVudHMgfHwge30pWyJjc21faGVhZF9wb3N0X2ljb24iXSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9KShJTURiVGltZXIpOzwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIkxvYWRJY29ucyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJMb2FkSWNvbnMiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgCgoKICAgICAgICA8bGluayByZWw9J2ltYWdlX3NyYycgaHJlZj0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbG9nb3MvaW1kYl9mYl9sb2dvLTE3MzA4NjgzMjUuX0NCNDk5NjA2OTgyXy5wbmciPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSdvZzppbWFnZScgY29udGVudD0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbG9nb3MvaW1kYl9mYl9sb2dvLTE3MzA4NjgzMjUuX0NCNDk5NjA2OTgyXy5wbmciIC8+CgogICAgPG1ldGEgcHJvcGVydHk9J2ZiOmFwcF9pZCcgY29udGVudD0nMTE1MTA5NTc1MTY5NzI3JyAvPgoKICAgIDxtZXRhIHByb3BlcnR5PSdvZzp0aXRsZScgY29udGVudD0iIiAvPgogICAgPG1ldGEgcHJvcGVydHk9J29nOnNpdGVfbmFtZScgY29udGVudD0nSU1EYicgLz4KICAgIDxtZXRhIG5hbWU9InRpdGxlIiBjb250ZW50PSJJTURiIiAvPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSIiIC8+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSIiIC8+CiAgICAgICAgPG1ldGEgbmFtZT0icmVxdWVzdF9pZCIgY29udGVudD0iUDZXSkpQMERCV0VGUlowNzdLWlkiIC8+Cgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIkxvYWRDU1MiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcHJlX2NzcyJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvY3NzL2NvbGxlY3Rpb25zL2NvbnN1bWVyc2l0ZS0xNTczMjE3Njc3Ll9DQjQ3NjkyNzgwNl8uY3NzIiAvPgo8IS0tIGg9aWNzLWM0MnhsLTItMWItZGZjMDY4ZDIudXMtZWFzdC0xIC0tPgo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy9zaXRlL2NvbnN1bWVyLW5hdmJhci1tZWdhLTM3OTYxMTQyMDQuX0NCNDczOTk0NTMxXy5jc3MiIC8+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvY3NzL2FwcC9jb25zdW1lcnNpdGUvZmluZC0xNDM3OTQ0NDU2Ll9DQjQ5OTU1ODg2MF8uY3NzIiAvPgo8IS0tW2lmIElFXT48bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy9jb2xsZWN0aW9ucy9pZS0zNTc5MTUzNDQ3Ll9DQjQ5ODcyNDAzNV8uY3NzIiAvPjwhW2VuZGlmXS0tPgoKICAgICAgICA8bm9zY3JpcHQ+CiAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvY3NzL3doZWVsL25vanMtMjgyNzE1NjM0OS5fQ0I0OTk2MTM1MDJfLmNzcyI+CiAgICAgICAgPC9ub3NjcmlwdD4KICA8c2NyaXB0PihmdW5jdGlvbih0KXsgKHQuZXZlbnRzID0gdC5ldmVudHMgfHwge30pWyJjc21faGVhZF9wb3N0X2NzcyJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiTG9hZENTUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJMb2FkQ1NTIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJMb2FkSlMiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcHJlX2FkcyJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CiAgICAgICAgCiAgICAgICAgPHNjcmlwdCAgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgLy8gZW5zdXJlcyBqcyBkb2Vzbid0IGRpZSBpZiBhZHMgc2VydmljZSBmYWlscy4gIAogICAgICAgICAgICAvLyBOb3RlIHRoYXQgd2UgbmVlZCB0byBkZWZpbmUgdGhlIGpzIGhlcmUsIHNpbmNlIGFkIGpzIGlzIGJlaW5nIHJlbmRlcmVkIGlubGluZSBhZnRlciB0aGlzLgogICAgICAgICAgICAoZnVuY3Rpb24oZikgewogICAgICAgICAgICAgICAgLy8gRmFsbGJhY2sgamF2YXNjcmlwdCwgd2hlbiB0aGUgYWQgU2VydmljZSBjYWxsIGZhaWxzLiAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmKCh3aW5kb3cuY3NtID09IG51bGwgfHwgd2luZG93LmdlbmVyaWMgPT0gbnVsbCB8fCB3aW5kb3cuY29uc29sZUxvZyA9PSBudWxsKSkgewogICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuY29uc29sZSAmJiBjb25zb2xlLmxvZykgewogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygib25lIG9yIG1vcmUgb2Ygd2luZG93LmNzbSwgd2luZG93LmdlbmVyaWMgb3Igd2luZG93LmNvbnNvbGVMb2cgaGFzIGJlZW4gc3R1YmJlZC4uLiIpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgd2luZG93LmNzbSA9IHdpbmRvdy5jc20gfHwgeyBtZWFzdXJlOmYsIHJlY29yZDpmLCBkdXJhdGlvbjpmLCBsaXN0ZW46ZiwgbWV0cmljczp7fSB9OwogICAgICAgICAgICAgICAgd2luZG93LmdlbmVyaWMgPSB3aW5kb3cuZ2VuZXJpYyB8fCB7IG1vbml0b3Jpbmc6IHsgc3RhcnRfdGltaW5nOiBmLCBzdG9wX3RpbWluZzogZiB9IH07CiAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZUxvZyA9IHdpbmRvdy5jb25zb2xlTG9nIHx8IGY7CiAgICAgICAgICAgIH0pKGZ1bmN0aW9uKCkge30pOwogICAgICAgIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21faGVhZF9kZWxpdmVyeV9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIkxvYWRKUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJMb2FkSlMiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgCiAgICA8L2hlYWQ+CiAgICA8Ym9keSBpZD0ic3R5bGVndWlkZS12MiIgY2xhc3M9ImZpeGVkIj4KICAgICAgICAKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIpOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX2JvZHlfZGVsaXZlcnlfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgICAgIDxkaXYgaWQ9IndyYXBwZXIiPgogICAgICAgICAgICA8ZGl2IGlkPSJyb290IiBjbGFzcz0icmVkZXNpZ24iPgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoIm5zIik7CiAgICB9Cjwvc2NyaXB0Pgo8ZGl2IGlkPSJuYjIwIiBjbGFzcz0ibmF2YmFyU3ByaXRlIj4KPGRpdiBpZD0ic3VwZXJ0YWIiPgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogdG9wX2FkIC0tPgoJCjwvZGl2PgogIDxkaXYgaWQ9Im5hdmJhciIgY2xhc3M9Im5hdmJhclNwcml0ZSI+Cjxub3NjcmlwdD4KICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy9zaXRlL2NvbnN1bWVyLW5hdmJhci1uby1qcy0zNjUyNzgyOTg5Ll9DQjQ5OTYwMzc3Nl8uY3NzIiAvPgo8L25vc2NyaXB0Pgo8c3BhbiBpZD0iaG9tZV9pbWdfaG9sZGVyIj4KPGEgaHJlZj0iLz9yZWZfPW52X2hvbWUiCnRpdGxlPSJIb21lIiBjbGFzcz0ibmF2YmFyU3ByaXRlIiBpZD0iaG9tZV9pbWciID48L2E+ICA8c3BhbiBjbGFzcz0iYWx0X2xvZ28iPgogICAgPGEgaHJlZj0iLz9yZWZfPW52X2hvbWUiCnRpdGxlPSJIb21lIiA+SU1EYjwvYT4KICA8L3NwYW4+Cjwvc3Bhbj4KPGZvcm0KIG1ldGhvZD0iZ2V0IgogYWN0aW9uPSIvZmluZCIKIGNsYXNzPSJuYXYtc2VhcmNoYmFyLWlubmVyIgogaWQ9Im5hdmJhci1mb3JtIgoKPgogIDxkaXYgaWQ9Im5iX3NlYXJjaCI+CiAgICA8bm9zY3JpcHQ+PGRpdiBpZD0ibW9yZV9pZl9ub19qYXZhc2NyaXB0Ij48YSBocmVmPSIvc2VhcmNoLyI+TW9yZTwvYT48L2Rpdj48L25vc2NyaXB0PgogICAgPGJ1dHRvbiBpZD0ibmF2YmFyLXN1Ym1pdC1idXR0b24iIGNsYXNzPSJwcmltYXJ5IGJ0biIgdHlwZT0ic3VibWl0Ij48ZGl2IGNsYXNzPSJtYWduaWZ5aW5nZ2xhc3MgbmF2YmFyU3ByaXRlIj48L2Rpdj48L2J1dHRvbj4KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlZl8iIHZhbHVlPSJudl9zcl9mbiIgLz4KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBhdXRvY29tcGxldGU9Im9mZiIgdmFsdWU9IkxldGhhbCBXZWFwb24iIG5hbWU9InEiIGlkPSJuYXZiYXItcXVlcnkiIHBsYWNlaG9sZGVyPSJGaW5kIE1vdmllcywgVFYgc2hvd3MsIENlbGVicml0aWVzIGFuZCBtb3JlLi4uIj4KICAgIDxkaXYgY2xhc3M9InF1aWNrc2VhcmNoX2Ryb3Bkb3duX3dyYXBwZXIiPgogICAgICA8c2VsZWN0IG5hbWU9InMiIGlkPSJxdWlja3NlYXJjaCIgY2xhc3M9InF1aWNrc2VhcmNoX2Ryb3Bkb3duIG5hdmJhclNwcml0ZSBoaWRkZW4iPgogICAgICAgIDxvcHRpb24gdmFsdWU9ImFsbCIgPkFsbDwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9InR0IiA+VGl0bGVzPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iZXAiID5UViBFcGlzb2Rlczwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9Im5tIiA+TmFtZXM8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJjbyIgPkNvbXBhbmllczwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9Imt3IiA+S2V5d29yZHM8L29wdGlvbj4KICAgICAgPC9zZWxlY3Q+CiAgICA8L2Rpdj4KICAgIDxkaXYgaWQ9Im5hdmJhci1zdWdnZXN0aW9uc2VhcmNoIiBjbGFzcz0nY2Vsd2lkZ2V0JyBjZWxfd2lkZ2V0X2lkPSdTdWdnZXN0aW9uU2VhcmNoV2lkZ2V0Jz48L2Rpdj4KICA8L2Rpdj4KPC9mb3JtPgo8ZGl2IGlkPSJtZWdhTWVudSI+CiAgICA8dWwgaWQ9ImNvbnN1bWVyX21haW5fbmF2IiBjbGFzcz0ibWFpbl9uYXYiPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgICAgIDxsaSBjbGFzcz0iY3NzX25hdl9pdGVtIiBpZD0ibmF2VGl0bGVNZW51Ij4KICAgICAgICAgICAgPHAgY2xhc3M9Im5hdkNhdGVnb3J5Ij4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tb3ZpZXMtaW4tdGhlYXRlcnMvP3JlZl89bnZfdHBfaW50aF8xIgo+TW92aWVzPC9hPiwKICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFydC90b3B0di8/cmVmXz1udl90cF90djI1MF8yIgo+VFY8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICAmIDxhIGhyZWY9Ii9zaG93dGltZXMvP3JlZl89bnZfdHBfc2hfMyIKPlNob3d0aW1lczwvYT48L3A+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkb3duQXJyb3ciPjwvc3Bhbj4KICAgICAgICAgICAgPGRpdiBpZD0ibmF2TWVudTEiIGNsYXNzPSJzdWJfbmF2Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ0aXRsZU1lbnVJbWFnZSIgc3R5bGU9ImJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvTS9NVjVCT1RrMk1UazVPVEV6TlY1Qk1sNUJhbkJuWGtGdFpUY3dORGczTWpVNE13QEAuX1YxLl9TWTQwMF9DUjUwLDUwLDQxMCwzMTVfLmpwZycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGl0bGU9IiAgICAgICAgICAgICAgICAgICAgICAgICAgICBWZXJ0aWdvCiwgIzczIG9uIElNRGIgVG9wIFJhdGVkIE1vdmllcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii90aXRsZS90dDAwNTIzNTcvP3JlZl89bnZfbXZfZGZsdF8xIiBjbGFzcz0iZmFsbGJhY2siPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im92ZXJsYXkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDA1MjM1Ny8/cmVmXz1udl9tdl9kZmx0XzIiIGlkPSJ0aXRsZU1lbnVJbWFnZUNsaWNrIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVmVydGlnbwo8L3N0cm9uZz4gKDE5NTgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFydC90b3A/cmVmXz1udl9tdl9kZmx0XzMiIGlkPSJ0aXRsZU1lbnVJbWFnZVNlY29uZGFyeUNsaWNrIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIzxzdHJvbmc+NzM8L3N0cm9uZz4gb24gSU1EYiBUb3AgUmF0ZWQgTW92aWVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPiAmcmFxdW87CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViTmF2TGlzdENvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGg1Pk1PVklFUzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL21vdmllcy1pbi10aGVhdGVycy8/cmVmXz1udl9tdl9pbnRoXzEiCj5JbiBUaGVhdGVyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3Nob3d0aW1lcy8/cmVmXz1udl9tdl9zaF8yIgo+U2hvd3RpbWVzICYgVGlja2V0czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3RyYWlsZXJzLz9yZWZfPW52X212X3RyXzMiCj5MYXRlc3QgVHJhaWxlcnM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9tb3ZpZXMtY29taW5nLXNvb24vP3JlZl89bnZfbXZfY3NfNCIKPkNvbWluZyBTb29uPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FsZW5kYXIvP3JlZl89bnZfbXZfY2FsXzUiCj5SZWxlYXNlIENhbGVuZGFyPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdG9wP3JlZl89bnZfbXZfMjUwXzYiCj5Ub3AgUmF0ZWQgTW92aWVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvaW5kaWEvdG9wLXJhdGVkLWluZGlhbi1tb3ZpZXM/cmVmXz1udl9tdl8yNTBfaW5fNyIKPlRvcCBSYXRlZCBJbmRpYW4gTW92aWVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvbW92aWVtZXRlcj9yZWZfPW52X212X21wbV84Igo+TW9zdCBQb3B1bGFyIE1vdmllczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPGg1PkNIQVJUUyAmIFRSRU5EUzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NoYXJ0Lz9yZWZfPW52X2NoX2NodF8xIgo+Qm94IE9mZmljZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaC90aXRsZT9jb3VudD0xMDAmZ3JvdXBzPW9zY2FyX2Jlc3RfcGljdHVyZV93aW5uZXJzJnNvcnQ9eWVhcixkZXNjJnJlZl89bnZfY2hfb3NjXzIiCj5Pc2NhciBXaW5uZXJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZ2VucmUvP3JlZl89bnZfY2hfZ3JfMyIKPk1vc3QgUG9wdWxhciBieSBHZW5yZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1Yk5hdkxpc3RDb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNT5UViAmIFZJREVPPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvdHYvP3JlZl89bnZfdHZ2X3R2XzEiCj5JTURiIFRWPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdG9wdHYvP3JlZl89bnZfdHZ2XzI1MF8zIgo+VG9wIFJhdGVkIFRWIFNob3dzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdHZtZXRlcj9yZWZfPW52X3R2dl9tcHR2XzQiCj5Nb3N0IFBvcHVsYXIgVFYgU2hvd3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWN0aW9ucy9kdmQvP3JlZl89bnZfdHZ2X2R2ZF81Igo+RFZEICYgQmx1LVJheTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPGg1PlNQRUNJQUwgRkVBVFVSRVM8L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hbWF6b24tb3JpZ2luYWxzLz9yZWZfPW52X3NmX2Ftc18xIgo+QW1hem9uIE9yaWdpbmFsczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2ltZGJwaWNrcy9zdW1tZXItbW92aWUtZ3VpZGUvbHMwNjg0NDk1NTAvP3JlZl89bnZfc2Zfc3RfMiIKPlN1bW1lciBNb3ZpZSBHdWlkZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3N0YXItd2Fycy8/cmVmXz1udl9zZl9zdHdfMyIKPlN0YXIgV2FyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2ltZGJwaWNrcy8/cmVmXz1udl9zZl9waWNrc180Igo+SU1EYiBQaWNrczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3N1cGVyaGVyb2VzLz9yZWZfPW52X3NmX3N1cHJfNSIKPlN1cGVyaGVyb2VzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZmFtaWx5LWVudGVydGFpbm1lbnQtZ3VpZGUvP3JlZl89bnZfc2ZfZmFtXzYiCj5GYW1pbHk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii92aWRlby1nYW1lcy8/cmVmXz1udl9zZl92aWRnXzciCj5WaWRlbyBHYW1lczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfaXRlbSIgaWQ9Im5hdk5hbWVNZW51Ij4KICAgICAgICAgICAgPHAgY2xhc3M9Im5hdkNhdGVnb3J5Ij4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zZWFyY2gvbmFtZT9nZW5kZXI9bWFsZSxmZW1hbGUmcmVmXz1udl90cF9jZWxfMSIKPkNlbGViczwvYT4sCiAgICAgICAgICAgICAgICA8YSBocmVmPSIvYXdhcmRzLWNlbnRyYWwvP3JlZl89bnZfdHBfYXdyZF8yIgo+RXZlbnRzPC9hPjxiciAvPgogICAgICAgICAgICAgICAgJiA8YSBocmVmPSIvZ2FsbGVyeS9yZzc4NDk2NDM1Mj9yZWZfPW52X3RwX3BoXzMiCj5QaG90b3M8L2E+PC9wPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZG93bkFycm93Ij48L3NwYW4+CiAgICAgICAgICAgIDxkaXYgaWQ9Im5hdk1lbnUyIiBjbGFzcz0ic3ViX25hdiI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibmFtZU1lbnVJbWFnZSIgc3R5bGU9ImJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvTS9NVjVCTWpBMU56a3lOakF6TlY1Qk1sNUJhbkJuWGtGdFpUY3dOell5T1RVeE9RQEAuX1YxLl9TWDI1MF9DUjAsMCwyNTAsMzE1Xy5qcGcnKSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRpdGxlPSJBbm5lIEhhdGhhd2F5LCAjMTA2IG9uIFNUQVJtZXRlciIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9uYW1lL25tMDAwNDI2Ni8/cmVmXz1udl9jZWxfZGZsdF8xIiBjbGFzcz0iZmFsbGJhY2siPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im92ZXJsYXkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL25hbWUvbm0wMDA0MjY2Lz9yZWZfPW52X2NlbF9kZmx0XzIiIGlkPSJuYW1lQWRDbGljayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+QW5uZSBIYXRoYXdheTwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4gJnJhcXVvOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICM8c3Ryb25nPjEwNjwvc3Ryb25nPiBvbiBTVEFSbWV0ZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJOYXZMaXN0Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8aDU+Q0VMRUJTPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaC9uYW1lP2JpcnRoX21vbnRoZGF5PTA3LTA2JnJlZmluZT1iaXJ0aF9tb250aGRheSZyZWZfPW52X2NlbF9icm5fMSIKPkJvcm4gVG9kYXk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL2NlbGVicml0eT9yZWZfPW52X2NlbF9ud18yIgo+Q2VsZWJyaXR5IE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2gvbmFtZT9nZW5kZXI9bWFsZSxmZW1hbGUmcmVmXz1udl9jZWxfbV8zIgo+TW9zdCBQb3B1bGFyIENlbGViczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPGg1PlBIT1RPUzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dhbGxlcnkvcmcxODU5ODIwMjg4P3JlZl89bnZfcGhfbHNfMSIKPkxhdGVzdCBTdGlsbHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9nYWxsZXJ5L3JnMTYyNDkzOTI2ND9yZWZfPW52X3BoX2xwXzIiCj5MYXRlc3QgUG9zdGVyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dhbGxlcnkvcmcxNjQxNzE2NDgwP3JlZl89bnZfcGhfbHZfMyIKPlBob3RvcyBXZSBMb3ZlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViTmF2TGlzdENvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGg1PkVWRU5UUzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2F3YXJkcy1jZW50cmFsLz9yZWZfPW52X2V2X2F3cmRfMSIKPkF3YXJkcyBDZW50cmFsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZmVzdGl2YWwtY2VudHJhbC8/cmVmXz1udl9ldl9mY18yIgo+RmVzdGl2YWwgQ2VudHJhbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL29zY2Fycy8/cmVmXz1udl9ldl9hY2RfMyIKPk9zY2FyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dvbGRlbi1nbG9iZXMvP3JlZl89bnZfZXZfZ2dfNCIKPkdvbGRlbiBHbG9iZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zdW5kYW5jZS8/cmVmXz1udl9ldl9zdW5fNSIKPlN1bmRhbmNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FubmVzLz9yZWZfPW52X2V2X2Nhbl82Igo+Q2FubmVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY29taWMtY29uLz9yZWZfPW52X2V2X2NvbWljXzciCj5Db21pYy1Db248L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbW15cy8/cmVmXz1udl9ldl9ydGVfOCIKPkVtbXkgQXdhcmRzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvdmVuaWNlLz9yZWZfPW52X2V2X3ZlbmljZV85Igo+VmVuaWNlIEZpbG0gRmVzdGl2YWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii90b3JvbnRvLz9yZWZfPW52X2V2X3Rvcl8xMCIKPlRvcm9udG8gRmlsbSBGZXN0aXZhbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2Zlc3RpdmFsLWNlbnRyYWwvdHJpYmVjYT9yZWZfPW52X2V2X3RyYl8xMSIKPlRyaWJlY2E8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zeHN3Lz9yZWZfPW52X2V2X3N4c3dfMTIiCj5TWFNXPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZXZlbnQvYWxsLz9yZWZfPW52X2V2X2FsbF8xMyIKPkFsbCBFdmVudHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJjc3NfbmF2X2l0ZW0iIGlkPSJuYXZOZXdzTWVudSI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJuYXZDYXRlZ29yeSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbmV3cy90b3A/cmVmXz1udl90cF9ud18xIgo+TmV3czwvYT4gJjxiciAvPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2N6b25lLz9yZWZfPW52X2NtX2N6XzIiCj5Db21tdW5pdHk8L2E+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgogICAgICAgICAgICA8ZGl2IGlkPSJuYXZNZW51MyIgY2xhc3M9InN1Yl9uYXYiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0ibGF0ZXN0SGVhZGxpbmVzIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJOYXZMaXN0Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGg1PkxBVEVTVCBIRUFETElORVM8L2g1PgogICAgPHVsIGNsYXNzPSJpcGwtc2ltcGxlLWxpc3QiPgogICAgICAgICAgICA8bGkgY2xhc3M9Im5ld3NfaXRlbSI+CjxhIGhyZWY9Ii9uZXdzL25pNjIxMjIzMzQ/cmVmXz1udl9ud190bl8xIgo+IENvbWljLUNvbiAyMDE4OiBGcmlkYXkgU2NoZWR1bGUgSW5jbHVkZXMg4oCYRHIuIEhvcnJpYmxl4oCZIFJldW5pb24sIOKAmFZlbm9t4oCZLCDigJhHbGFzc+KAmSBhbmQgTW9yZQo8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICA8c21hbGw+CiAgICAgICAgICAgICAgICA8c3Bhbj41IGhvdXJzIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3Bhbj5Db2xsaWRlci5jb208L3NwYW4+CiAgICAgICAgICAgICAgICA8L3NtYWxsPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9Im5ld3NfaXRlbSI+CjxhIGhyZWY9Ii9uZXdzL25pNjIxMjI2Njg/cmVmXz1udl9ud190bl8yIgo+IE1hcmdvdCBSb2JiaWUgc2F5cyBSLXJhdGVkIEJpcmRzIG9mIFByZXkgbW92aWUgY291bGQgc2hvb3QgaW4gSmFudWFyeQo8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICA8c21hbGw+CiAgICAgICAgICAgICAgICA8c3Bhbj4yNyBtaW51dGVzIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3Bhbj5Kb0Jsbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvc21hbGw+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibmV3c19pdGVtIj4KPGEgaHJlZj0iL25ld3Mvbmk2MjEyMjI3Nj9yZWZfPW52X253X3RuXzMiCj4gS2VyaSBSdXNzZWxsIGlzIFNldCB0byBTdGFyIGluIFN0YXIgV2FyczogRXBpc29kZSBJWAo8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICA8c21hbGw+CiAgICAgICAgICAgICAgICA8c3Bhbj42IGhvdXJzIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3Bhbj5HZWVrVHlyYW50PC9zcGFuPgogICAgICAgICAgICAgICAgPC9zbWFsbD4KICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1Yk5hdkxpc3RDb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNT5ORVdTPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbmV3cy90b3A/cmVmXz1udl9ud190cF8xIgo+VG9wIE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL21vdmllP3JlZl89bnZfbndfbXZfMiIKPk1vdmllIE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL3R2P3JlZl89bnZfbndfdHZfMyIKPlRWIE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL2NlbGVicml0eT9yZWZfPW52X253X2NlbF80Igo+Q2VsZWJyaXR5IE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL2luZGllP3JlZl89bnZfbndfaW5kXzUiCj5JbmRpZSBOZXdzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICA8aDU+Q09NTVVOSVRZPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY3pvbmUvP3JlZl89bnZfY21fY3pfMiIKPkNvbnRyaWJ1dG9yIFpvbmU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wb2xsLz9yZWZfPW52X2NtX3BsXzMiCj5Qb2xsczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfaXRlbSIgaWQ9Im5hdldhdGNobGlzdE1lbnUiPgo8cCBjbGFzcz0ibmF2Q2F0ZWdvcnkgc2luZ2xlTGluZSB3YXRjaGxpc3QiPgogICAgPGEgaHJlZj0iL2xpc3Qvd2F0Y2hsaXN0P3JlZl89bnZfd2xfYWxsXzAiCj5XYXRjaGxpc3Q8L2E+CjwvcD4KPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgo8ZGl2IGlkPSJuYXZNZW51NCIgY2xhc3M9InN1Yl9uYXYiPgogICAgPGg1PgogICAgICAgICAgICBZT1VSIFdBVENITElTVAogICAgPC9oNT4KICAgIDx1bCBpZD0ibmF2V2F0Y2hsaXN0Ij4KICAgIDwvdWw+CiAgICA8c2NyaXB0PgogICAgaWYgKCEoJ2ltZGInIGluIHdpbmRvdykpIHsgd2luZG93LmltZGIgPSB7fTsgfQogICAgd2luZG93LmltZGIud2F0Y2hsaXN0VGVhc2VyRGF0YSA9IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgaHJlZiA6ICIvbGlzdC93YXRjaGxpc3QiLAogICAgICAgICAgICAgICAgc3JjIDogImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci93YXRjaGxpc3Rfc2xvdDFfbG9nZ2VkX291dC0xNjcwMDQ2MzM3Ll9DQjQ5OTU1ODYzNF8uanBnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBocmVmIDogIi9zZWFyY2gvdGl0bGU/Y291bnQ9MTAwJnRpdGxlX3R5cGU9ZmVhdHVyZSx0dl9zZXJpZXMiLAogICAgICAgICAgICAgICAgc3JjIDogImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci93YXRjaGxpc3Rfc2xvdDJfcG9wdWxhci00MDkwNzU3MTk3Ll9DQjQ5OTYwMzc5OF8uanBnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBocmVmIDogIi9jaGFydC90b3AiLAogICAgICAgICAgICAgICAgc3JjIDogImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci93YXRjaGxpc3Rfc2xvdDNfdG9wMjUwLTU3NTc5OTk2Ni5fQ0I0OTk2MDY5NjVfLmpwZyIKICAgICAgICAgICAgICAgIH0KICAgIF07CiAgICA8L3NjcmlwdD4KPC9kaXY+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgIDwvdWw+CjwvZGl2Pgo8ZGl2IGlkPSJuYl9leHRyYSI+CiAgICA8dWwgaWQ9Im5iX2V4dHJhX25hdiIgY2xhc3M9Im1haW5fbmF2Ij4KICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfaXRlbSIgaWQ9Im5hdlByb01lbnUiPgogICAgPHAgY2xhc3M9Im5hdkNhdGVnb3J5Ij4KPGEgaHJlZj0iaHR0cHM6Ly9wcm8uaW1kYi5jb20vc2lnbnVwL2luZGV4Lmh0bWw/cmY9Y29uc19uYl9obSZyZWZfPWNvbnNfbmJfaG0iCj4gPGltZyBhbHQ9IklNRGJQcm8gTWVudSIgc3JjPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9uYXZiYXIvaW1kYnByb19sb2dvX25iLTMwMDA0NzM4MjYuX0NCNDk5NjAzODEzXy5wbmciIC8+CjwvYT4gICAgPC9wPgogICAgPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgo8ZGl2IGlkPSJuYXZNZW51UHJvIiBjbGFzcz0iaW1kYi1wcm8tYWQtc2hhcmVkIGltZGItcHJvLWFkLXJlZGVzaWduIHN1Yl9uYXYiPgo8YSBocmVmPSJodHRwczovL3Byby5pbWRiLmNvbS9zaWdudXAvaW5kZXguaHRtbD9yZj1jb25zX25iX2htJnJlZl89Y29uc19uYl9obSIKY2xhc3M9ImltZGItcHJvLWFkX19saW5rIiA+IDxkaXYgaWQ9InByb0FkIiBjbGFzcz0iaW1kYi1wcm8tYWRfX2ltYWdlIj4KPGltZyBhbHQ9IkdvIHRvIElNRGJQcm8iIGhlaWdodD0iMTQ1IiB3aWR0aD0iMTI3IgpzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci9pbWRicHJvX25hdmJhcl9tZW51X3VzZXItMjA3NDg2OTQxNi5fQ0I0NzQwMTc3MDZfLnBuZyIKc3Jjc2V0PSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9uYXZiYXIvaW1kYnByb19uYXZiYXJfbWVudV91c2VyLTIwNzQ4Njk0MTYuX0NCNDc0MDE3NzA2Xy5wbmcgMXgsCmh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci9pbWRicHJvX25hdmJhcl9tZW51X3VzZXJfMngtMjQ0MjU5NDU3Ll9DQjQ3NDAxNzcwMF8ucG5nIDJ4Ii8+CjwvZGl2Pgo8c2VjdGlvbiBjbGFzcz0iaW1kYi1wcm8tYWRfX2NvbnRlbnQiPgo8ZGl2IGNsYXNzPSJpbWRiLXByby1hZF9fdGl0bGUiPlRoZSBlc3NlbnRpYWwgcmVzb3VyY2UgZm9yIGVudGVydGFpbm1lbnQgcHJvZmVzc2lvbmFsczwvZGl2Pgo8cCBjbGFzcz0iaW1kYi1wcm8tYWRfX2xpbmUiPkZpbmQgaW5kdXN0cnkgY29udGFjdHMgJmFtcDsgdGFsZW50IHJlcHJlc2VudGF0aW9uPC9wPgo8cCBjbGFzcz0iaW1kYi1wcm8tYWRfX2xpbmUiPkFjY2VzcyBpbi1kZXZlbG9wbWVudCB0aXRsZXMgbm90IGF2YWlsYWJsZSBvbiBJTURiPC9wPgo8cCBjbGFzcz0iaW1kYi1wcm8tYWRfX2xpbmUiPkdldCB0aGUgbGF0ZXN0IG5ld3MgZnJvbSBsZWFkaW5nIGluZHVzdHJ5IHRyYWRlczwvcD4KPHAgY2xhc3M9ImltZGItcHJvLWFkX19saW5lIj5DbGFpbSB5b3VyIHBhZ2UgYW5kIGNvbnRyb2wgeW91ciBicmFuZCBhY3Jvc3MgSU1EYiAmIEFtYXpvbjwvcD4KPGRpdiBjbGFzcz0iaW1kYi1wcm8tbmV3X19idXR0b24iPgo8c3ZnIHdpZHRoPSIxNzVweCIgaGVpZ2h0PSIzMHB4IiB2aWV3Qm94PSIwIDAgMTcyIDI5IiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPgo8dGl0bGU+VHJ5SU1EYlByb0ZyZWU8L3RpdGxlPgo8ZyBpZD0idHJ5SU1EYlByb0ZyZWUiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgo8cmVjdCBpZD0idHJ5SU1EYlByb0ZyZWVCdXR0b24iIHN0cm9rZT0iI0E4ODczNCIgZmlsbD0iI0YxQzI0MSIgeD0iMSIgeT0iMSIgd2lkdGg9IjE3MCIgaGVpZ2h0PSIyOCIgcng9IjMiPjwvcmVjdD4KPHRleHQgaWQ9InRyeUlNRGJQcm9GcmVlVGV4dCI+Cjx0c3BhbiB4PSIzMyIgeT0iMTkiPlRyeSBJTURiUHJvIEZyZWU8L3RzcGFuPgo8L3RleHQ+CjwvZz4KPC9zdmc+CjwvZGl2Pgo8L3NlY3Rpb24+CjwvYT48L2Rpdj4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+PC9saT4KICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaGVscC5pbWRiLmNvbS9pbWRiP3JlZl89Y29uc19uYl9obHAiCj5IZWxwPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJzb2NpYWwiPgoKICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfZmImdG9rZW49QkNZbmh2X0M2dTN2X0JacGNmY2FIdGpWQ3UzMFoxdUF4Sm5uM01pMEVyY2VRSmJwM0lYOE1ZRTJaUTlhZ295Uld5U3JOVGJIRVNqOCUwRCUwQUVqTU1ESnhsT1U2dkpvVTlPcS1RQ2sxU20tczJpRGdnb3Zuei12cEZBLWRqdzdtWVBLa2tfMzlaVkFTanNrcDg3bkh5MTkydnNncDQlMEQlMEFVNW1TVDBCMlEwZW1EX2NrU1lGZldkNzBIR3hkRzJ5MTVKMW45aXBNVFlldiUwRCUwQSZyZWZfPW52X2ZvbF9mYiIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIEZhY2Vib29rIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LWZhY2Vib29rIiA+PC9zcGFuPgo8L2E+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249Zm9sX3R3JnRva2VuPUJDWWpPbUUwcjkzRXpZTmx2UWlabDMySUJfdzFaSW1nRlFKS3VFNHc0TnRPbUFZR0Z1TmFQOHRmNXpydUhrNWdiaGdtSmVKbm9jZnclMEQlMEFsTDR3T1drTUlxUUVQZWZ1RHRfcEJ3QzdkLXd1VXdNR2VmTllmMEJKZFFmY2FhSzhaVkpGVXdOd3RjSWZmb2N0N2Z4RTAyY25tRU93JTBEJTBBZGhJZU8wOVltMkExbElJazFnMUZ5YncwaF9zam5RQUd2VlRkNWNGMUo5M00lMEQlMEEmcmVmXz1udl9mb2xfdHciCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBUd2l0dGVyIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LXR3aXR0ZXIiID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfaW5zdCZ0b2tlbj1CQ1ltb29IbGttSjRvdEFMMjkybUF6RDFCeTVmTDJxQUhnZ1JiNEV5cF9VS0o0blhyMkNWLUF4N2laSEp3aDBYRVV5M3RjQ1hFVms5JTBEJTBBa3VjdzFzOEt6d21ETjRyNmdWYS15M1FKaHRFSUxZNlpEZkZmSUwyT0J6TXFOTG5yWWFSLVhXY1NoQWNNRkNjYnNSckZyUlRReTk1SSUwRCUwQXJiRkxwd05qUmNLTENFcmR5ZzFSQ280OFNRWmF3VVBqVzdrY1Y0bTI0U2pqJTBEJTBBJnJlZl89bnZfZm9sX2luc3QiCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBJbnN0YWdyYW0iIHRhcmdldD0iX2JsYW5rIiA+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBmb2xsb3ctaW5zdGFncmFtIiA+PC9zcGFuPgo8L2E+CiAgICAgICAgPC9saT4KICAgIDwvdWw+CjwvZGl2Pgo8ZGl2IGlkPSJuYl9wZXJzb25hbCI+CiAgICA8dWwgaWQ9ImNvbnN1bWVyX3VzZXJfbmF2IiBjbGFzcz0ibWFpbl9uYXYiPgogICAgICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfbWVudSBub19hcnJvdyIgaWQ9Im5hdlVzZXJNZW51Ij4KICAgICAgICAgICAgPHAgY2xhc3M9Im5hdkNhdGVnb3J5IHNpbmdsZUxpbmUiPgogICAgICAgICAgICAgICAgPGEgaWQ9ImZhY2Vib29rLXNpZ25pbi1saW5rIiBocmVmPSJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92Mi44L29hdXRoL2F1dGhvcml6ZT9jbGllbnRfaWQ9MTI3MDU5OTYwNjczODI5JnNjb3BlPWVtYWlsJTJDdXNlcl9hYm91dF9tZSUyQ3VzZXJfYmlydGhkYXkmc3RhdGU9ZXlJME9XVTJZeUk2SW1SaE1qa2lMQ0oxSWpvaWFIUjBjSE02THk5M2QzY3VhVzFrWWk1amIyMHZQM0psWmw4OWJuWmZabUpmYkdkcGJpSXNJbTFoYm5WaGJFeHBibXNpT2lKbVlXeHpaU0o5JnJlZGlyZWN0X3VyaT1odHRwcyUzQSUyRiUyRnd3dy5pbWRiLmNvbSUyRnJlZ2lzdHJhdGlvbiUyRmZhY2Vib29raGFuZGxlciUyRiIgY2xhc3M9InNpZ25pbi1idXR0b24iPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZhY2Vib29rLWxvZ28iPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaWduaW4tZmFjZWJvb2stdGV4dCI+U2lnbiBpbiB3aXRoIEZhY2Vib29rPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9yZWdpc3RyYXRpb24vc2lnbmluP3U9L2ZpbmQlM0ZxJTNETGV0aGFsJTJCV2VhcG9uJTI2cmVmXyUzRG52X3NyX2ZuJnJlZl89bnZfdXNyX2xnaW5fMSIKcmVsPSJsb2dpbiIgY2xhc3M9InNpZ25pbi1vdGhlci1vcHRpb25zLXRleHQiIGlkPSJuYmxvZ2luIiA+T3RoZXIgU2lnbiBpbiBvcHRpb25zPC9hPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgIDwvbGk+CiAgICA8L3VsPgo8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+CgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogbmF2c3RyaXAgLS0+CgkKCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBpbmplY3RlZF9uYXZzdHJpcCAtLT4KCQo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoIm5lIik7CiAgICB9Cjwvc2NyaXB0PgogICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwYWdlY29udGVudCIgY2xhc3M9InBhZ2Vjb250ZW50Ij4KCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBpbmplY3RlZF9iaWxsYm9hcmQgLS0+CgkKPGRpdiBpZD0iY29udGVudC0yLXdpZGUiPgogICAgPGRpdiBpZD0ibWFpbiI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0aWNsZSI+CiAgICAgICA8aDEgY2xhc3M9ImZpbmRIZWFkZXIiPlJlc3VsdHMgZm9yIDxzcGFuIGNsYXNzPSJmaW5kU2VhcmNoVGVybSI+IkxldGhhbCBXZWFwb24iPC9zcGFuPjwvaDE+CgoKICAgICAgICA8ZGl2IGlkPSJmaW5kU3ViSGVhZGVyIj48c3BhbiBpZD0iZmluZFN1YkhlYWRlckxhYmVsIj5KdW1wIHRvOjwvc3Bhbj4KICAgICAgICAgICAgICA8YSBocmVmPSIjdHQiPlRpdGxlczwvYT4gCiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNubSI+TmFtZXM8L2E+IAogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4KICAgICAgICAgICAgICA8YSBocmVmPSIja3ciPktleXdvcmRzPC9hPiAKICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4KCjxkaXYgY2xhc3M9ImZpbmRTZWN0aW9uIj4KPGgzIGNsYXNzPSJmaW5kU2VjdGlvbkhlYWRlciI+PGEgbmFtZT0idHQiPjwvYT5UaXRsZXM8L2gzPgo8dGFibGUgY2xhc3M9ImZpbmRMaXN0Ij4KPHRyIGNsYXNzPSJmaW5kUmVzdWx0IG9kZCI+IDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+IDxhIGhyZWY9Ii90aXRsZS90dDUxNjQxOTYvP3JlZl89Zm5fYWxfdHRfMSIgPjxpbWcgc3JjPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTWpBM01qVTJNVGM1TVY1Qk1sNUJhbkJuWGtGdFpUZ3dNRGszTWpjM09URUAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvdGl0bGUvdHQ1MTY0MTk2Lz9yZWZfPWZuX2FsX3R0XzEiID5MZXRoYWwgV2VhcG9uPC9hPiAoMjAxNikgKFRWIFNlcmllcykgPC90ZD4gPC90cj48dHIgY2xhc3M9ImZpbmRSZXN1bHQgZXZlbiI+IDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+IDxhIGhyZWY9Ii90aXRsZS90dDAwOTM0MDkvP3JlZl89Zm5fYWxfdHRfMiIgPjxpbWcgc3JjPSJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCWlRsbE5XTmxaamN0TVdRd01TMDBaRGMzTFRnNVpqTXROemhtTnpoak1tVmhZVEZsWGtFeVhrRnFjR2RlUVhWeU5UYzFOVFF4T0RJQC5fVjFfVVgzMl9DUjAsMCwzMiw0NF9BTF8uanBnIiAvPjwvYT4gPC90ZD4gPHRkIGNsYXNzPSJyZXN1bHRfdGV4dCI+IDxhIGhyZWY9Ii90aXRsZS90dDAwOTM0MDkvP3JlZl89Zm5fYWxfdHRfMiIgPkxldGhhbCBXZWFwb248L2E+ICgxOTg3KSA8L3RkPiA8L3RyPjx0ciBjbGFzcz0iZmluZFJlc3VsdCBvZGQiPiA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPiA8YSBocmVmPSIvdGl0bGUvdHQwMzAxNTQzLz9yZWZfPWZuX2FsX3R0XzMiID48aW1nIHNyYz0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk9UVmhNREJsTmpBdE5qazRZUzAwT0RNMUxXSTVOalV0WkdRNVkyUmxOVFZpWkdRd1hrRXlYa0ZxY0dkZVFYVnlOakV4T0RFMU1EY0AuX1YxX1VZNDRfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvdGl0bGUvdHQwMzAxNTQzLz9yZWZfPWZuX2FsX3R0XzMiID5MZXRoYWwgV2VhcG9uPC9hPiAoMTk5MikgKFZpZGVvIEdhbWUpIDwvdGQ+IDwvdHI+PHRyIGNsYXNzPSJmaW5kUmVzdWx0IGV2ZW4iPiA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPiA8YSBocmVmPSIvdGl0bGUvdHQwMDk3NzMzLz9yZWZfPWZuX2FsX3R0XzQiID48aW1nIHNyYz0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1QllUZzBZbUUxTTJJdE5HTTJPQzAwTW1aakxUZ3dNVE10WmpsbU9HRTROMkV5TlRWaFhrRXlYa0ZxY0dkZVFYVnlNVFF4TnpNek5ESUAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvdGl0bGUvdHQwMDk3NzMzLz9yZWZfPWZuX2FsX3R0XzQiID5MZXRoYWwgV2VhcG9uIDI8L2E+ICgxOTg5KSA8L3RkPiA8L3RyPjx0ciBjbGFzcz0iZmluZFJlc3VsdCBvZGQiPiA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPiA8YSBocmVmPSIvdGl0bGUvdHQwMTIyMTUxLz9yZWZfPWZuX2FsX3R0XzUiID48aW1nIHNyYz0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1QlltVTJZVFl3WW1VdE1UWXpPQzAwWXpKbUxUazFORGt0TXpVNFl6QTNOamMxWm1ZMFhrRXlYa0ZxY0dkZVFYVnlORGszTnpVMk1UUUAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvdGl0bGUvdHQwMTIyMTUxLz9yZWZfPWZuX2FsX3R0XzUiID5MZXRoYWwgV2VhcG9uIDQ8L2E+ICgxOTk4KSA8L3RkPiA8L3RyPjx0ciBjbGFzcz0iZmluZFJlc3VsdCBldmVuIj4gPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4gPGEgaHJlZj0iL3RpdGxlL3R0MDEwNDcxNC8/cmVmXz1mbl9hbF90dF82IiA+PGltZyBzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJPVEZsTmpJME5EUXRNemxrTkMwMFpEVTBMV0UwT0RrdFltSTJPVGMyWWpabFptVmxYa0V5WGtGcWNHZGVRWFZ5TVRReE56TXpORElALl9WMV9VWDMyX0NSMCwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiA8L3RkPiA8dGQgY2xhc3M9InJlc3VsdF90ZXh0Ij4gPGEgaHJlZj0iL3RpdGxlL3R0MDEwNDcxNC8/cmVmXz1mbl9hbF90dF82IiA+TGV0aGFsIFdlYXBvbiAzPC9hPiAoMTk5MikgPC90ZD4gPC90cj48L3RhYmxlPgo8ZGl2IGNsYXNzPSJmaW5kTW9yZU1hdGNoZXMiPgogICAgICAgIFZpZXc6Jm5ic3A7IDxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9dHQmcmVmXz1mbl9hbF90dF9tciIKPk1vcmUgdGl0bGUgbWF0Y2hlczwvYT4KICAgICAgICAgICAgJm5ic3A7b3ImbmJzcDsKICAgICAgICAgICAgPGEgaHJlZj0iL2ZpbmQ/cT1MZXRoYWwlMjBXZWFwb24mcz10dCZleGFjdD10cnVlJnJlZl89Zm5fYWxfdHRfZXgiCj5FeGFjdCB0aXRsZSBtYXRjaGVzPC9hPgo8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImZpbmRTZWN0aW9uIj4KPGgzIGNsYXNzPSJmaW5kU2VjdGlvbkhlYWRlciI+PGEgbmFtZT0ibm0iPjwvYT5OYW1lczwvaDM+Cjx0YWJsZSBjbGFzcz0iZmluZExpc3QiPgo8dHIgY2xhc3M9ImZpbmRSZXN1bHQgb2RkIj4gPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4gPGEgaHJlZj0iL25hbWUvbm0wMDg1Nzc0Lz9yZWZfPWZuX2FsX25tXzEiID48aW1nIHNyYz0iaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk9EUmlNR1V6WW1NdE56SXdNUzAwWmpOaUxUZ3lZamN0WkRBMU1XWTVPVEUzTlRnMVhrRXlYa0ZxY0dkZVFYVnlORFV6T1RRNU1qWUAuX1YxX1VZNDRfQ1IyLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+IDwvdGQ+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiPiA8YSBocmVmPSIvbmFtZS9ubTAwODU3NzQvP3JlZl89Zm5fYWxfbm1fMSIgPlN0ZXZlIEJsYWNrbWFuPC9hPiAoSSkgPHNtYWxsPihBY3RvciwgPGEgaHJlZj0iL3RpdGxlL3R0Mzk2MDY4Ni8/cmVmXz1mbl9hbF9ubV8xYSIgPldXRiBTaG90Z3VuIFNhdHVyZGF5IE5pZ2h0PC9hPiAoMTk5NykpPC9zbWFsbD4gPGJyLz5uaWNrbmFtZSA8aT4iVGhlIExldGhhbCBXZWFwb24iPC9pPiA8L3RkPiA8L3RyPjwvdGFibGU+CjxkaXYgY2xhc3M9ImZpbmRNb3JlTWF0Y2hlcyI+CiAgICAgICAgVmlldzombmJzcDsgPGEgaHJlZj0iL2ZpbmQ/cT1MZXRoYWwlMjBXZWFwb24mcz1ubSZyZWZfPWZuX2FsX25tX21yIgo+TW9yZSBuYW1lIG1hdGNoZXM8L2E+CjwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iZmluZFNlY3Rpb24iPgo8aDMgY2xhc3M9ImZpbmRTZWN0aW9uSGVhZGVyIj48YSBuYW1lPSJrdyI+PC9hPktleXdvcmRzPC9oMz4KPHRhYmxlIGNsYXNzPSJmaW5kTGlzdCI+Cjx0ciBjbGFzcz0iZmluZFJlc3VsdCBvZGQiPiA8dGQgY2xhc3M9InJlc3VsdF90ZXh0IiBjb2xzcGFuPSIyIj4gPGEgaHJlZj0iL2tleXdvcmQvbGV0aGFsLXdlYXBvbi8/cmVmXz1mbl9hbF9rd18xIiA+bGV0aGFsLXdlYXBvbjwvYT4gKDIgdGl0bGVzKSA8L3RkPiA8L3RyPjx0ciBjbGFzcz0iZmluZFJlc3VsdCBldmVuIj4gPHRkIGNsYXNzPSJyZXN1bHRfdGV4dCIgY29sc3Bhbj0iMiI+IDxhIGhyZWY9Ii9rZXl3b3JkL2xlc3MtbGV0aGFsLXdlYXBvbi8/cmVmXz1mbl9hbF9rd18yIiA+bGVzcy1sZXRoYWwtd2VhcG9uPC9hPiAoNiB0aXRsZXMpIDwvdGQ+IDwvdHI+PHRyIGNsYXNzPSJmaW5kUmVzdWx0IG9kZCI+IDx0ZCBjbGFzcz0icmVzdWx0X3RleHQiIGNvbHNwYW49IjIiPiA8YSBocmVmPSIva2V5d29yZC9ub24tbGV0aGFsLXdlYXBvbi8/cmVmXz1mbl9hbF9rd18zIiA+bm9uLWxldGhhbC13ZWFwb248L2E+ICgxIHRpdGxlKSA8L3RkPiA8L3RyPjwvdGFibGU+CjxkaXYgY2xhc3M9ImZpbmRNb3JlTWF0Y2hlcyI+CiAgICAgICAgVmlldzombmJzcDsgPGEgaHJlZj0iL2ZpbmQ/cT1MZXRoYWwlMjBXZWFwb24mcz1rdyZyZWZfPWZuX2FsX2t3X21yIgo+TW9yZSBrZXl3b3JkIG1hdGNoZXM8L2E+CiAgICAgICAgICAgICZuYnNwO29yJm5ic3A7CiAgICAgICAgICAgIDxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9a3cmZXhhY3Q9dHJ1ZSZyZWZfPWZuX2FsX2t3X2V4Igo+RXhhY3Qga2V5d29yZCBtYXRjaGVzPC9hPgo8L2Rpdj4KPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGlkPSJzaWRlYmFyIj4KCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiB0b3BfcmhzIC0tPgoJCgo8ZGl2IGNsYXNzPSJhdXgtY29udGVudC13aWRnZXQtMyI+CjxoMz5DYXRlZ29yeSBTZWFyY2g8L2gzPgo8cD5TZWFyY2ggZm9yICJMZXRoYWwgV2VhcG9uIiB3aXRoaW4gYSBzcGVjaWZpYyBjYXRlZ29yeToKPHVsIGNsYXNzPSJmaW5kRmlsdGVyTGlzdCI+CjxsaSBjbGFzcz0iZmlsdGVyQWN0aXZlIj5BbGw8L2xpPgo8bGkgPjxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9bm0mcmVmXz1mbl9ubSIKPk5hbWU8L2E+IDxzcGFuPihhY3Rvciwgd3JpdGVyLCBkaXJlY3RvciwgZXRjKTwvc3Bhbj48L2xpPgo8bGkgPjxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9dHQmcmVmXz1mbl90dCIKPlRpdGxlPC9hPiA8c3Bhbj4obW92aWUsIFRWLCB2aWRlbyBnYW1lKTwvc3Bhbj48L2xpPgogICA8dWwgY2xhc3M9ImZpbmRUaXRsZVN1YmZpbHRlckxpc3QiPgogICAgICAgPGxpID48YSBocmVmPSIvZmluZD9xPUxldGhhbCUyMFdlYXBvbiZzPXR0JnR0eXBlPWZ0JnJlZl89Zm5fZnQiCj5Nb3ZpZTwvYT48L2xpPgogICAgICAgPGxpID48YSBocmVmPSIvZmluZD9xPUxldGhhbCUyMFdlYXBvbiZzPXR0JnR0eXBlPXR2JnJlZl89Zm5fdHYiCj5UVjwvYT48L2xpPgogICAgICAgPGxpID48YSBocmVmPSIvZmluZD9xPUxldGhhbCUyMFdlYXBvbiZzPXR0JnR0eXBlPWVwJnJlZl89Zm5fZXAiCj5UViBFcGlzb2RlPC9hPjwvbGk+CiAgICAgICA8bGkgPjxhIGhyZWY9Ii9maW5kP3E9TGV0aGFsJTIwV2VhcG9uJnM9dHQmdHR5cGU9dmcmcmVmXz1mbl92ZyIKPlZpZGVvIEdhbWU8L2E+PC9saT4KICAgPC91bD4KPGxpID48YSBocmVmPSIvZmluZD9xPUxldGhhbCUyMFdlYXBvbiZzPWNvJnJlZl89Zm5fY28iCj5Db21wYW55PC9hPjwvbGk+CjxsaSA+PGEgaHJlZj0iL2ZpbmQ/cT1MZXRoYWwlMjBXZWFwb24mcz1rdyZyZWZfPWZuX2t3Igo+S2V5d29yZDwvYT48L2xpPgoKPGxpPjxhIGhyZWY9Ii9zZWFyY2gvdGl0bGUtdGV4dD9wbG90PUxldGhhbCUyMFdlYXBvbiZyZWZfPWZuX3BsIgo+UGxvdCBTdW1tYXJpZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Ii9zZWFyY2gvbmFtZS10ZXh0P2Jpbz1MZXRoYWwlMjBXZWFwb24mcmVmXz1mbl9iaSIKPkJpb2dyYXBoaWVzPC9hPjwvbGk+CjxsaT48YSBocmVmPSIvc2VhcmNoL3RpdGxlLXRleHQ/cXVvdGVzPUxldGhhbCUyMFdlYXBvbiZyZWZfPWZuX3F1Igo+UXVvdGVzPC9hPjwvbGk+CjwvdWw+CjwvZGl2PgoJCgk8IS0tIG5vIGNvbnRlbnQgcmVjZWl2ZWQgZm9yIHNsb3Q6IHJoc19jb3JuZXJzdG9uZSAtLT4KCQo8ZGl2IGNsYXNzPSJhdXgtY29udGVudC13aWRnZXQtMyI+CiAgICA8aDM+QWRkaXRpb25hbCBTZWFyY2ggT3B0aW9uczwvaDM+CiAgICA8dWwgY2xhc3M9ImZpbmRTZWFyY2hPcHRpb25zTGlzdCI+CiAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2gvP3JlZl89Zm5fYXNyIgo+QWR2YW5jZWQgU2VhcmNoPC9hPjwvbGk+CiAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/cmVmXz1mbl9hc3JfdHQiCj5BZHZhbmNlZCBUaXRsZSBTZWFyY2g8L2E+PC9saT4KICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaC9uYW1lP3JlZl89Zm5fYXNyX25tIgo+QWR2YW5jZWQgTmFtZSBTZWFyY2g8L2E+PC9saT4KICAgIDwvdWw+CiAgICA8aHIgLz4KPGRpdiBjbGFzcz0iZmluZEVuYWJsZUFkdWx0VG9nZ2xlIj4KICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj9yZWZfPWZuX2FkIgo+TG9nIGluPC9hPiB0byBlbmFibGUgYWR1bHQgdGl0bGVzL25hbWVzIGluIHlvdXIgc2VhcmNoZXMuCjwvZGl2Pgo8L2Rpdj4KCgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogYm90dG9tX3JocyAtLT4KCQogICAgPC9kaXY+CjwvZGl2PgogICAgICAgICAgICAgICAgICAgPGJyIGNsYXNzPSJjbGVhciIgLz4KICAgICAgICAgICAgICAgIDwvZGl2PgoKCiAgICA8ZGl2IGlkPSJmb290ZXIiIGNsYXNzPSJmdCI+CiAgICAgICAgICAgIDxkaXYgaWQ9InJ2aS1kaXYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjZW50bHktdmlld2VkIj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyaHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBpZD0iY2xlYXJfcnZpIiBocmVmPSIjIj5DbGVhciB5b3VyIGhpc3Rvcnk8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGgzPlJlY2VudGx5IFZpZXdlZDwvaDM+CiAgICAgICAgICAgICAgICAgICAgPGJyIGNsZWFyPSJhbGwiIC8+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW1zIj4mbmJzcDs8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGJyIGNsYXNzPSJjbGVhciI+CiAgICAgICAgICAgIDwvZGl2PgoKCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBib3R0b21fYWQgLS0+CgkKCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGZvb3Rlci1ncmlkLXdyYXBwZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgZm9vdGVyLXJvdyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgb3V0c2lkZSI+CiAgICA8aDM+SU1EYiBFdmVyeXdoZXJlPC9oMz4KICAgIDxkaXYgY2xhc3M9ImFwcC1saW5rcyI+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnRfYXBwX2FwcGxlJnRva2VuPUJDWWxoWHh4dVNRWUVPZmwtVHBPSU8tUXVBVGNHczM4S1NtdVlPQk5Lcy1rT20zOVJJSElaSi1Na2I0MEl3MzY5Wk14RE9uRXhZN2YlMEQlMEF6aVZjR3FkQzE0WGdiSE1GTHJLbFFaejc5b0J6NG95Z1RCWmlOVDJHdkhvQzF5YWdaZHphZkRpc1g4S01CT3c2ODFlNEQ5YnBtQ3BVJTBEJTBBZEYzemNaUl85SDBxZ0tXMEtIMjVqenZhcXR3eUMwaDltd3hiY3VlT3cyTUg0UjlIenNzQUlFZnFOWmphUnFOWFlBJTBEJTBBJnJlZl89ZnRfYXBwX2FwcGxlIgp0aXRsZT0iR2V0IHRoZSBJTURiIEFwcCBvbiB0aGUgQXBwbGUgQXBwIFN0b3JlIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgYXBwc3RvcmUtYXBwbGUiID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdF9hcHBfZ29vZ2xlJnRva2VuPUJDWWw3dm8tREE3U2syTWpKYlFYNXR0QV9iWEtRdHBrM0hKY3RQQlBpQjM0dlUwQkJ3alhGODl3NGQ0MFFVMVlMdnd3VnFqOGwyNlolMEQlMEFKeEs2V3JzcXdFalJjVjRuUkYwRzdDTzhfck1oY2tnWWdENHdpaDllSnE5WEdvLWVzZDBoQnNLc3Zhc0lRZERYbFBwZEZDS25wYm1YJTBEJTBBcHZyQW84RUJlejRWcGtISG9wVmI1QnNxQzRaaVJ5cUVrZmN5cW1jU2IwUHlER2RUQkNMbEVzbmZjS1RmenZCVU1RJTBEJTBBJnJlZl89ZnRfYXBwX2dvb2dsZSIKdGl0bGU9IkdldCB0aGUgSU1EYiBhcHAgb24gR29vZ2xlIFBsYXkiIHRhcmdldD0iX2JsYW5rIiA+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBhcHBzdG9yZS1nb29nbGUiID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdF9hcHBfYW1hem9uJnRva2VuPUJDWXViTDFWd3Q5V3ItOVJEQzZZTlZrWEVaV3ZqSUxibDF1QzFUakhZZ2xGbV8xLTJrejRzaGdmb1VlcmxWT3JLOFhQMTRuRzFHRVklMEQlMEFVSU5lVWhzTFYyeU55RDRCLXlFMldBMTZtTnFFeUFzTDNtdlo2THJ0S19xbGxrSktaVjBuSkc1aWM2QVZ0TFV5UUhZVEVjZG5RUjFoJTBEJTBBTElaR2xZRmQ2N00wYXBHSE5nSEE1ZkpHcmN6cFp1dER0cVhhS2c5MlRlaHBNN3RrNUpiSF9rUF9yQTFfSnRvOGtYM3p2VUMwOTlSZyUwRCUwQU0wemdPVms5WDl2djN1U2dET0lmTm40TVFmMGxoMEZPbGo3UEtJNXZKQ2h2OUFrbkxvMV9rNnZlNlpva3RvWXBGQ0Yzemx1eDUtdmolMEQlMEE4a2JVMzJvTXdpRHhqTmxEYmhLUTRab3ZRMlY3TGVJcjRxWG1JZXJpcW1GdkJ3TnZmSF9GS1RrSzYwdmhBRHEtaktzWXIzQTlwczRxJTBEJTBBclY0NzhyNGxmRGZRdmQ1cmd6WjdSbWNpOHRtTzVRJTBEJTBBJnJlZl89ZnRfYXBwX2FtYXpvbiIKdGl0bGU9IkdldCB0aGUgSU1EYiBhcHAgb24gQW1hem9uIEFwcHN0b3JlIGZvciBBbmRyb2lkIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgYXBwc3RvcmUtYW1hem9uIiA+PC9zcGFuPgo8L2E+CiAgICA8L2Rpdj4KCiAgICA8cD5GaW5kIHNob3d0aW1lcywgd2F0Y2ggdHJhaWxlcnMsIGJyb3dzZSBwaG90b3MsIHRyYWNrIHlvdXIgV2F0Y2hsaXN0IGFuZCByYXRlIHlvdXIgZmF2b3JpdGUgbW92aWVzIGFuZCBUViBzaG93cyBvbiB5b3VyIHBob25lIG9yIHRhYmxldCE8L3A+CgogICAgPGEgaHJlZj0iaHR0cHM6Ly9tLmltZGIuY29tP3JlZl89ZnRfbWRvdCIKY2xhc3M9InRvdWNobGluayIgPklNRGIgTW9iaWxlIHNpdGU8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBjZW50ZXIiPgogIDxkaXYgY2xhc3M9ImxpbmstYmFyIGljb24tbGluay1iYXIiPgogICAgPGgzPgogICAgICBGb2xsb3cgSU1EYiBvbgogICAgICA8ZGl2PgoKICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfZmImdG9rZW49QkNZdXdMRFpVWWt4X0FCRmJaZXp2bzNlT2N5Z2xDcW55cXZjMm1yZ2QxdjhxMWVYdDFkVG9TV1B2TFZVNjhXUVp5UkdNVDJNV3cxZSUwRCUwQTUxZTRjeURWbXhSY2ZNMFZmM1MyQzVCWVpfWTU4dzRBd0h4WGhCc1pJQWN4ZnlzcC1rTlFQcW9lVmE2ZmZLdzFCeVcyMFByUTk3WGolMEQlMEFhSW8ybkhqWFhsOXRxUk16dnU4V2xEa0hQc3NoSVBkN2pyVThUTkhXWnZ6RSUwRCUwQSZyZWZfPWZ0X2ZvbF9mYiIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIEZhY2Vib29rIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LWZhY2Vib29rIiA+PC9zcGFuPgo8L2E+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249Zm9sX3R3JnRva2VuPUJDWWx0d3pJVkd5enhkaVJCRjRORG82cDhhV3Y2WnBwZU1Qc2xRTEYyYkI3N3FsQ09iWEF5b09ScnZzdzYzZThEWEtUNnctN2htTTIlMEQlMEF4SGVWakpxRi1KSzlvMXMyaUt6XzBiWTA0TENmTXVOdXpwX1Y1TUxmQmItcHpRSm94azgyTFBkTGE1MlI2NXVhSEh2NmdHM3BESThqJTBEJTBBbEJjOTlYbTNlZUNTSTZMTXlhMVJsTUU2ZWpXVmlwelg0b01QV0FQRGZlSlIlMEQlMEEmcmVmXz1mdF9mb2xfdHciCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBUd2l0dGVyIiB0YXJnZXQ9Il9ibGFuayIgPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LXR3aXR0ZXIiID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfaW5zdCZ0b2tlbj1CQ1ltYW9hS3lxUEl0VWNEMWF5UlZoNnV2YjdnLWVBaUVESk5LWS0wdXkwVHprcnBJV3ZCOEsteExqWWJONkFzc3NoS3pWQ00yek1JJTBEJTBBem1mQ2J3T2YxTWNxQ0pEN3V6VDc5aldSS2Vmd1dtelBUX3dld0RrazNkTjZOZXF6Y1VrdnhDM08tNXljZGlFeEJMREJqTE9rMFl1UCUwRCUwQUM2YmI1Mm5IM2VoRFpfb1I2UlRBSHdyLTdUV2tVMHh0dlFzcmM1Zy1rVkdEJTBEJTBBJnJlZl89ZnRfZm9sX2luc3QiCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBJbnN0YWdyYW0iIHRhcmdldD0iX2JsYW5rIiA+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBmb2xsb3ctaW5zdGFncmFtIiA+PC9zcGFuPgo8L2E+CiAgICAgIDwvZGl2PgogICAgPC9oMz4KICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIG91dHNpZGUiPgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgY29sLTQiPgogICAgICAgICAgICA8dWwgY2xhc3M9InVuc3R5bGVkIj4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvP3JlZl89ZnRfaG0iCj5Ib21lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NoYXJ0L3RvcD9yZWZfPWZ0XzI1MCIKPlRvcCBSYXRlZCBNb3ZpZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvP3JlZl89ZnRfY2h0Igo+Qm94IE9mZmljZTwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii90di8/cmVmXz1mdF90diIKPlRWPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL21vdmllcy1jb21pbmctc29vbi8/cmVmXz1mdF9jcyIKPkNvbWluZyBTb29uPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2Eyej9yZWZfPWZ0X3NpIgo+U2l0ZSBJbmRleDwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2g/cmVmXz1mdF9zciIKPlNlYXJjaDwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9tb3ZpZXMtaW4tdGhlYXRlcnMvP3JlZl89ZnRfaW50aCIKPkluIFRoZWF0ZXJzPC9hPjwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sIGNvbC00Ij4KICAgICAgICAgICAgPHVsIGNsYXNzPSJ1bnN0eWxlZCI+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9oZWxwLmltZGIuY29tL2ltZGI/cmVmXz1mdF9jb24iCj5Db250YWN0IFVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+ICAgICAgICA8YSBocmVmPSJodHRwczovL3NlY3VyZS5pbWRiLmNvbS9yZWdpc3Rlci1pbWRiL2Zvcm0tdjI/cmVmXz1mdF9yZWciCj5SZWdpc3RlcjwvYT4KPC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbmV3cy8/cmVmXz1mdF9udyIKPk5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wcmVzc3Jvb20vP3JlZl89ZnRfcHIiCj5QcmVzcyBSb29tPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9hZHZlcnRpc2luZy5hbWF6b24uY29tL2xwL2ltZGI/cmVmXz1mdF9hZCIKPkFkdmVydGlzaW5nPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2pvYnM/cmVmXz1mdF9qYiIKPkpvYnM8L2E+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgY29sLTQiPgogICAgICAgICAgICA8dWwgY2xhc3M9InVuc3R5bGVkIj4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3Byby5pbWRiLmNvbS9zaWdudXAvaW5kZXguaHRtbD9yZj1jb25zX2Z0X2htJnJlZl89Y29uc19mdF9obSIKPklNRGJQcm88L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LW1vam8mdG9rZW49QkNZckZlZThjcDlLbm1VdXVQY2dPSG5yRXR2cTVyM2RSZVNOUGV0aU1qTHozMUVaMDBQcEpOX0RHbFU1clhnVHJNQ2dtZ1lGR3lySSUwRCUwQXhSUGVXSkVrSHFoZ1U2bVZRc1djMVVoV2xlYkhGb3FyNVgxR0pmOHdQUFd0dTFxMVFGenB1MmUxVWUzbWFNOHplVWRsSEo2QkwwWm0lMEQlMEFUMGFQMEdiNmM4Vk1Md3VIRjBtOXktc2RvWkxZTVRWZlFJTDRRNmwtQkRZNyUwRCUwQSZyZWZfPWZ0X2JvbSIKPkJveCBPZmZpY2UgTW9qbzwvYT4KPC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LXdhYiZ0b2tlbj1CQ1luX1BseTEydVA0Ul9BTV9CXzJRYlNMdmsxVklyLTN5emZTb3RBTmY3MGlMdUNkdVI2MlhFVHU5U3lWWGVoR0RXUDN0Q0k2UVkwJTBEJTBBZkRSNzkwWTBoVjFIeGZ6aGRjZ29MWldEQlpCVk95cUJQR1dncHc5NGliNHRwamZIWEdEdkw5VTNYQjFseWxVTlRQR3RTSER6bzM3SiUwRCUwQTNrV19VbFotcDM5NjlHNEpVWDZGaWEyQVFCRUMxTVJ3aXFwV0tudG5VVm1NJTBEJTBBJnJlZl89ZnRfd2FiIgo+V2l0aG91dGFib3g8L2E+CjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY29uZGl0aW9ucz9yZWZfPWZ0X2NvdSIKPkNvbmRpdGlvbnMgb2YgVXNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3ByaXZhY3k/cmVmXz1mdF9wdmMiCj5Qcml2YWN5IFBvbGljeTwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtaWJhJnRva2VuPUJDWXVNRVpqQTU2N0Jaam5IX2h3X1RQcUo1QlJjYmNoby1OLVIwMFdoNFl2N19zSFJyU2t1N3ptS2l3VUxZNmszcnI0WDhRYVpVcjAlMEQlMEFVT2RjYUNmUGJOaXNkcXJoaHRod3o0aFpBLVNHVUowRU1Cb3piR1Vka0FTTjJWeWIwcGxkNjJzSUtLaVJ4dHJjLUlMNlphOUNOUDFlJTBEJTBBSUNQUXc3Z3psMGVOem9aUlQ4alY0blZzUnFrQkluSDNiTVVUbUZtRDBGVjZ1ZF83ZWdaaHFYajlxWVhnTEc3T1BYRFpMQmxtS3JxeSUwRCUwQWpZSTAzRlB5VC1jJTBEJTBBJnJlZl89ZnRfaWJhIgo+SW50ZXJlc3QtQmFzZWQgQWRzPC9hPgo8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZnQtY29weSBmbG9hdC1yaWdodCI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvY29uZGl0aW9ucyIKPkNvcHlyaWdodCAmY29weTs8L2E+IDE5OTAtMjAxOAogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9oZWxwLmltZGIuY29tL2ltZGI/cmVmXz1jb25zX2Z0cl9pbWRiIgo+SU1EYi5jb20sIEluYy48L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgQW4gPHNwYW4gaWQ9ImFtYXpvbl9sb2dvIiBjbGFzcz0iZm9vdGVyX2xvZ28iIGFsaWduPSJtaWRkbGUiPkFtYXpvbi5jb208L3NwYW4+IGNvbXBhbnkuCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKCgogICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGlkPSJhbWF6b24tYWZmaWxpYXRlcyI+CiAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQgY29sc3Bhbj0iOCI+CiAgICAgICAgICAgICAgICBBbWF6b24gQWZmaWxpYXRlcwogICAgICAgICAgICA8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPHRyPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYWl2JnRva2VuPUJDWW5vbUtwZVZXU2ZhRjJMWS11eUJWd1NGZFZWejRvSTVfR3BHdmxMRlNiZnlVa1R2RlhnSVJ5ai1pLWs3V1J3eUdTNkQwTmsyS1clMEQlMEFPZ3JjM0FTVEdVbktLSktrTFQ3N1cxbkt0LU1QcE45QXBhd2tfNmxwWVQ2NzVLVWlVTC1PUWJNalBwcm5vRWJrM2pXZFhUME5LOHlkJTBEJTBBcE9rbTYtV2VwUkVOT292RTliNDNxU3BGMk5ERFdSTmd4TmVnNDl5azRBdTF4bGF4cERRZmF5djBsNXQtVHM0bjB5QUdFTGJiY3NXciUwRCUwQTFXUk9TVENpMVBNJTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5BbWF6b24gVmlkZW88L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5XYXRjaCBNb3ZpZXMgJjxicj5UViBPbmxpbmU8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1waXYmdG9rZW49QkNZdmpXdmhOWmFPSFpTUjFhUkF0eE9jOVZWZXpuSUphbzBKdF80aDlwakgyQko1N3VUbXZpOXlkYWtwRlVxSWU4NDhMd0VJNG80WCUwRCUwQV93RFdxa1JDdzNjRHlqY2dQd0VEbkpHVFdGSXZPYWpRS055SzRVRFFlRFE1RnlLOVMxa21YS1MwckNTQ2tZTHhsMlItaEJCQW95S3ElMEQlMEFkNE5CUF9JSHN1Mjd3eHRZb19uS3dvR0IyenJ0TkQ4SzQ0MEJhN2w2Q1FLRlEtVDFaQ0lfaDg3eEUtWVlSWVhoVkFIYzlkaW5SdXBUJTBEJTBBc0p0YzV4NVVLSWMlMEQlMEEiIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbGluayI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLW5hbWUiPlByaW1lIFZpZGVvPC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+VW5saW1pdGVkIFN0cmVhbWluZzxicj5vZiBNb3ZpZXMgJiBUVjwvc3Bhbj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgPC90ZD4KCiAgICA8dGQ+CiAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LWFtem4tZGUmdG9rZW49QkNZcFJaTlJzMWM1ekhCdjgzRmRHbEtLdzVUdzE1c2JEOEFrY0VCanBUekFNa2Q3SmhrYjdQSmN4OEZqbGc1MlhzTFJFZW5VUGtQcCUwRCUwQV9udVVMN0p5cXJuVXJIcG5SMURQbE5Mc2szQXdPM0tFOFZvQ2g5Z2EwOUxHMnBPRWtkc2pGXzdYcVBWYVFvWVVaSmNlVjAzWmtWa2IlMEQlMEFUeG5HSkJ5dHB2NWFJOVpCNHhMSEcxVFdQMkFEQUtjc3R5aXYtb3dSbXZMM0gybkZBUEh5LUFENzNTNXBzRENOYzNnQVpYUVUzbjJvJTBEJTBBT29TZzNQd0d5TnMlMEQlMEEiIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbGluayI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLW5hbWUiPkFtYXpvbiBHZXJtYW55PC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+QnV5IE1vdmllcyBvbjxicj5EVkQgJiBCbHUtcmF5PC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1pdCZ0b2tlbj1CQ1l2UWIwRDk2TWpXQjFKc1Z0QmJrMUhCZHNxLVBTamtudDFQRDhuR0JQckVlQlJ3bDA5SmJxR1J0RlVsZzcxX3lSN0lxdUJzdG5TJTBEJTBBMGo3Zy00WFNSQVI1WC1MZFdZME1oeEtzSjFoNDdMR0RaT2R6ZGJ2NlN1dWEzQ1AtcnhYUUFHX2lxTTlLbzN3cTAwbU9zckEteWVfVyUwRCUwQUxVaXBsX2ZiSlhHUk9JMWMtR0NqaDhmbXF0ZHBhOC1OSTZvZXAtLVdyZVY3aERXbHpOQVdyUy10RVhpTktHMm1GT0hLVUl0WHFGclMlMEQlMEFEbE8zcVl2ZElKYyUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QW1hem9uIEl0YWx5PC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+QnV5IE1vdmllcyBvbjxicj5EVkQgJiBCbHUtcmF5PC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1mciZ0b2tlbj1CQ1l0T2RRV05zaGlvR2FXZEg3eFhkdFZTcS1FYmd6Z0NNWkxGTFBhbjROcG5zOGI3bzA0S1p4Z25UaU54V01ESDNSZlh3M1dPWEpHJTBEJTBBT2lYUnVPdGlYTmJZdmNoRGV5R2QzQUZpc2RCd0ZmeGRvMnZna0tQYnBJZER4RzNvb3BOeVJ6SGx3Y2pmc29YV2VTU2VMR1p6TllKNSUwRCUwQUJEVG5YdWhGRWNBcWhKY3Y2MThadFFNMTNxRGZoZW9ta2lDT1piUzY2NHlEeDFVZHNpd3RJZVl0N1JEX2pNd0Y4cjVhSTZJT2J6YWolMEQlMEFLZVpwR2NfdllEUSUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QW1hem9uIEZyYW5jZTwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPkJ1eSBNb3ZpZXMgb248YnI+RFZEICYgQmx1LXJheTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgPC90ZD4KCiAgICA8dGQ+CiAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LWFtem4taW4mdG9rZW49QkNZdjNTYWgxMXZwcnQwVEFhWXQ5cmdQVFRETklqQTctdVVGWW9RUWZBZTZVbU1NUWcyZVdJbTVzdlRWMTJEcHJOV3pJdUpFN3ZkQyUwRCUwQUJBUUxDUEFwVDBfamh2SlpuV3RPbmR6ZGlEbHVBanRmY3l4Z3I0d1pqMFdIWXRtQmIyRUZVQ196TUd4NTdzT0E5T1ljNm1qdVVLVVclMEQlMEFQZ3lnbHA1WXowSy1mRUJGb280cXZMQkRGR0RxeS1MQU9ha0tuTjVXR2xMRnBvSGt1NHRfSjFoWjE2RzU3TTFMZjNjRDJhNGM2YTliJTBEJTBBbEFiMl9Xemg5WWtac1lQd3p0dHByYlk0ZEFmMldkVHclMEQlMEEiIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbGluayI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLW5hbWUiPkFtYXpvbiBJbmRpYTwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPkJ1eSBNb3ZpZSBhbmQ8YnI+VFYgU2hvdyBEVkRzPC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1kcHImdG9rZW49QkNZck5qVUFwX0RNQ1NyREVzMGRBMGtlcVNyRGZWUWR1V0hDbkdMU0tzRG43c0NCNlFhVl96V2twdlpDRElzRGo5SkFaMDR5QzcwQyUwRCUwQTNFc05kNk5PX18xakdVeVE3OVl5OExJYXRqMmtfNEJnUjF1LXNyUDczMzhucnRTQWRTd0RkSURnWndIRjlNQzhiLXZ3R3ozOS1BR3glMEQlMEFqSWFnYWVwTmZObHRsWktISkF6S0R6TSUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+RFBSZXZpZXc8L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5EaWdpdGFsPGJyPlBob3RvZ3JhcGh5PC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1hdWQmdG9rZW49QkNZZ0pfZmJ3Z2dhSlhjWUdIYzZHTXlKOS1WZklhTmxPQVlGZ3pYQTlTdXhycEQzMmhRY2RRZHROM3Q0TG9OOHBKaVhkajBITE12UCUwRCUwQWZ2NVdseml6NzB2SzJWS0plY2loUFU5VWY5QWRBVnprZWI3WHM1dGt5OHc2NW9XYVVGZVREWVVpMnpSTnA4aXdFVS1uWFg4VGo1MkwlMEQlMEFpbXJOZS1VS3lTUWZlMmd1RGZGSGxXZyUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QXVkaWJsZTwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPkRvd25sb2FkPGJyPkF1ZGlvIEJvb2tzPC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgogICAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogICAgICA8L2Rpdj4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICB0cnkgewogICAgICAgICAgICB3aW5kb3cubHVtaWVyZVBsYXllciA9IHdpbmRvdy5sdW1pZXJlUGxheWVyIHx8IHt9OwogICAgICAgICAgICB3aW5kb3cubHVtaWVyZVBsYXllci53ZWJsYWIgPSBKU09OLnBhcnNlKCd7IklNREJfVklERU9fUExBWUVSXzE1MjI1OCI6IlQxIiwiSU1EQl9WSURFT19QTEFZRVJfMTYwMDU0IjoiQyIsIklNREJfVklERU9fUExBWUVSXzE1MjY1MSI6IlQxIiwiSU1EQl9WSURFT19QTEFZRVJfMTU2NjUwIjoiVDEifScpOwogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIGlmICh3aW5kb3cudWVMb2dFcnJvcikgewogICAgICAgICAgICAgICAgd2luZG93LnVlTG9nRXJyb3IoZXJyb3IsIHsKICAgICAgICAgICAgICAgICAgICBsb2dMZXZlbDogIldBUk4iLAogICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0aW9uOiAidmlkZW9wbGF5ZXIiLAogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICJGYWlsZWQgdG8gcGFyc2Ugd2VibGFicyBmb3IgdmlkZW8gcGxheWVyLiIKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgPC9zY3JpcHQ+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvanMvY29sbGVjdGlvbnMvY29tbW9uLTE4MTg0MTMwMDQuX0NCNDk5NjAzNzYxXy5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvanMvY29sbGVjdGlvbnMvanF1ZXJ5LTIxMzQzMjI2MzQuX0NCNDk5NTU5MDA3Xy5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvanMvY29sbGVjdGlvbnMvY29uc3VtZXJzaXRlLTI2MDYyMzA1OTUuX0NCNDczOTkwNjQ1Xy5qcyI+PC9zY3JpcHQ+CgoKCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBpZD0ibG9naW4iPgooZnVuY3Rpb24oKXsKICAgIHZhciByZWFkeVRpbWVvdXQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsKICAgICAgICBpZiAod2luZG93LmpRdWVyeSAmJiB3aW5kb3cuaW1kYiAmJiB3aW5kb3cuaW1kYi5sb2dpbl9saWdodGJveCkgewogICAgICAgICAgICBjbGVhclRpbWVvdXQocmVhZHlUaW1lb3V0KTsKICAgICAgICAgICAgd2luZG93LmltZGIubG9naW5fbGlnaHRib3goKTsKICAgICAgICB9CiAgICB9LCAxMDApOwp9KSgpOwo8L3NjcmlwdD4KCgogICAgICAgIAogICAgICAgIDxkaXYgaWQ9InNlcnZlcnRpbWUiIHRpbWU9IjM5Ii8+CgoKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiKTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgCiAgICA8L2JvZHk+CjwvaHRtbD4KCg==
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:17 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:18 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640598; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:25
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:25 GMT; Path=/; Secure
      - uu=BCYs65idxefVU2Why_2GIKLlqXsXF7CZvjN_c5wIwVQ0uAeVJD7w5i7S1qHlUI1M53-Q8SlRidbr%0D%0AM2EnCQYc-QgMMLhD10Ois-PLXD1SXFCjJte019Jo9mSoXg8w0JonlqrmqHCho_N08jYFBuYHWxxg%0D%0Aon_OZ2uYhecg1TukAvnWVVhZqetwQoguibU8eqR6Zfxt23Zjp2SfdNA6MSme0lzFGJlLSJlX--Ke%0D%0Ara-mOFBqNgOOgqjbqOIrhd9DFkX6lMDkArIkZl-1tcqRxBOT_w-AiJd0DS2z8qoUaCXth8NolF0%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:25 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:18 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:19 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640599; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:26
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:26 GMT; Path=/; Secure
      - uu=BCYizQkSwd8Ngu4dxVFX_YdZA5_CODfZHsSDvUBmd0V1WKKG6G2ZtHM8ARSUtTLyxRhjp0AK-deK%0D%0AIBj3az7NSNyMQ-NwxKj22Bc4FrPkus8TKtHbjHaCrE0IBIOE3ZOIwROw8TfMrZvxny6mdr3r7kdu%0D%0AUwBFsGFo1tn4CWDd-6VAa3kFHIcNG6CF1rbwXCNS3L8B3Q84YmbJO2ambQer4IkD717zEMakSjhZ%0D%0AWs066uWbZEFw9IxW_wi6ot82PcuXsfrSlmJaCQ-fHxMyOqAAQ1TGU2u7Uxc1k28tnYx4_Ok9Q9s%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:26 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:19 GMT
- request:
    method: get
    uri: https://www.imdb.com/find?q=Lethal%20Weapon&ref_=nv_sr_fn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Forwarded-For:
      - 35.228.112.200
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Fri, 06 Jul 2018 23:43:19 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Strict-Transport-Security:
      - max-age=47474747; includeSubDomains; preload
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Language:
      - en-US
      Set-Cookie:
      - session-id-time=2161640599; Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:26
        GMT; Path=/; Secure
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 25-Jul-2086
        02:57:26 GMT; Path=/; Secure
      - uu=BCYtVoVHGp6M_d_6SS65uB4F0XhsaXgjo-3Cg1r0jdTGDiT4JDn3ASobxB8L_LXe16cCMMjRR8Dw%0D%0AyZoU6hap4xrCC2-TFJwuaVk-PHQlest1kAzsT8Vo-SzuketOrPRHGLSnx7FuvlA-I-1PQXMnf0vo%0D%0Ae5qmbZDWqO9JEiJayqvh1Ws51baj7lG_lhQdJQWXfJAkyLi7inBLvadNTfHrlTzgSKvlWfdFCPq4%0D%0AdAk-knZ3EsPq4QMBSVezZMEzcSDkipkngtg2gST6ig7tfizNEU6vIW2R8GTjW9ycdmJNJG3Fobc%0D%0A;
        Domain=.imdb.com; Expires=Thu, 25-Jul-2086 02:57:26 GMT; Path=/; Secure
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Jul 2018 23:43:19 GMT
recorded_with: VCR 4.0.0
