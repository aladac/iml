#!/usr/bin/env ruby
# frozen_string_literal: true

require 'iml'
require 'optparse'

options = {}
logger = Logger.new(STDOUT)

begin
  OptionParser.new do |opts|
    opts.banner = "Usage: #{File.basename $PROGRAM_NAME} [options]"

    opts.on('-v', '--[no-]verbose', 'Run verbosely') do |v|
      options[:verbose] = v
    end
    opts.on('-p', '--[no-]pretend', 'Dry run, do not move any files') do |p|
      options[:pretend] = p
    end
    opts.on('-t', '--target PATH', 'Path to move media files to, default: current directory') do |t|
      options[:target] = t
    end
    puts opts if opts.default_argv.empty?
  end.parse!
rescue OptionParser::InvalidOption => e
  logger.error e.message
end

input = STDIN.tty? ? ARGV : $stdin.readlines

input ||= ARGV

input.each do |path|
  path = Pathname path.chomp
  filename = path.basename.to_s
  unless path.exist?
    logger.warn("File #{path} does not exist, skipping")
    next
  end
  media = IML::Text.new(filename).detect
  next unless media
  dirname = options[:target] ? Pathname(options[:target]) + media.dirname : media.dirname
  pathname = options[:target] ? Pathname(options[:target]) + media.pathname : media.pathname
  if media.is_a?(IML::Movie)
    logger.info "#{path} looks like a movie"
  elsif media.is_a?(IML::TVSeries)
    logger.info "#{path} looks like a TV series"
  end
  logger.info "Creating #{dirname}" if options[:verbose] || options[:pretend]
  FileUtils.mkdir_p dirname unless options[:pretend]
  logger.info "Moving #{path} to #{pathname}" if options[:verbose] || options[:pretend]
  FileUtils.mv path, pathname unless options[:pretend]
end
